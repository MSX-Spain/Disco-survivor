0001   0000                 output "loader.bin"
0002   0000             
0003   0000 FE              db   0FEh               ; ID archivo binario, siempre hay que poner el mismo 0FEh
0004   0001 00 85           dw   INICIO             ; dirección de inicio
0005   0003 C1 9A           dw   FINAL - 1          ; dirección final
0006   0005 05 85           dw   MAIN               ; dircción del programa de ejecución (para cuando pongas r en bload"nombre_programa", r)
0007   0007                 
0008   0007                  
0009   0007              
0010   0007                 org #8500              ; org se utiliza para decirle al z80 en que posición de memoria empieza nuestro programa (es la 33280 en decimal), en hezadecimal sería #8200
0011   8500                     
0012   8500             INICIO: 
0013   8500 01          screen:  db 1
0014   8501 00          in_game:  db 0
0015   8502 08          lives:  db 8
0016   8503 01 00       score:  db 1,0
0017   8505             
0018   8505             ;esta es la entrada principal
0019   8505             MAIN: 
0020   8505                 ;ld a,1 ; le ponemos la música ingame
0021   8505                 ;ld (musica_activa),a
0022   8505                 ;call inicilizar_tracker
0023   8505 CD 56 01     	call KILBUF ; limpiamos el buffer, por si vlvemos a empezar
0024   8508 CD CC 00     	call ERAFNK ; kitamos las letras de las teclas función
0025   850B 3E 01           ld a,1
0026   850D 32 AA FC        ld (#fcaa),a; borramos el cursor
0027   8510             
0028   8510 3E 01           ld a,1      ;cambiamos a screen 1 ya que para cargar la pantalla de carga hemos tenido que poner el 2
0029   8512 CD 5F 00        call CHGMOD
0030   8515             
0031   8515 CD A8 85        call show_menu ; mostramos el menu
0032   8518 3E 01           ld a,1
0033   851A 32 01 85        ld (in_game),a ; ponemos la variable que le dice al juego que está en marcha a 1
0034   851D             	;CALL para_cancion
0035   851D             loop: 	
0036   851D AF          	xor a
0037   851E CD D8 00    	call GTTRIG
0038   8521             	;GTTRIG devuelve 255 si está presionada y 0 sino lo está
0039   8521 FE 00       	cp 0
0040   8523 CA 1D 85    	jp z, loop
0041   8526             	
0042   8526             		
0043   8526 CD 7C 85    	call set_screen2_16x16
0044   8529 CD 41 00        call DISSCR ;apagamos la pantalla, la encendermos en el main.asm
0045   852C CD 9B 85    	call load_sprites
0046   852F CD 33 85    	call load_tileset
0047   8532             
0048   8532             
0049   8532             	;call para_cancion
0050   8532             
0051   8532             
0052   8532 C9          	ret
0053   8533             
0054   8533             
0055   8533             
0056   8533             
0057   8533             
0058   8533             	
0059   8533             load_tileset: 
0060   8533             	;banco 0
0061   8533             	;la rutina LDIRVM necesita haber cargado previamente con de la dirección de inicio de la VRAM.https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png,así es como está formado el VDP en screen 2          
0062   8533 21 2D 86    	ld hl, tileset_definition
0063   8536 11 00 00    	ld de, 0 ; aquí es posible utilizar la variable del sistema GRPCGP
0064   8539 01 00 04    	ld bc, 1024  ; son los 8 bytes por 128 tiles que hemos dibujado=1024 bytes
0065   853C CD 5C 00    	call  LDIRVM 
0066   853F             	;banco 1
0067   853F 21 2D 86    	ld hl, tileset_definition
0068   8542 11 00 08    	ld de, 2048
0069   8545 01 00 04    	ld bc, 1024 
0070   8548 CD 5C 00    	call  LDIRVM 
0071   854B             	;banco 2
0072   854B 21 2D 86    	ld hl, tileset_definition
0073   854E 11 00 10    	ld de, 4096
0074   8551 01 00 04    	ld bc, 1024  
0075   8554 CD 5C 00    	call  LDIRVM 
0076   8557             
0077   8557             	;banco 0
0078   8557 21 2D 8A    	ld hl, tileset_color
0079   855A 11 00 20        ld de, 8192 ; aquí es posible utilizar la variable del sistema GRPCOL
0080   855D 01 00 04        ld bc, 1024  
0081   8560 CD 5C 00        call  LDIRVM 
0082   8563             	;banco 1
0083   8563 21 2D 8A    	ld hl, tileset_color
0084   8566 11 00 28        ld de, 10240  
0085   8569 01 00 04        ld bc, 1024  
0086   856C CD 5C 00        call  LDIRVM 
0087   856F             	;banco 2
0088   856F 21 2D 8A    	ld hl, tileset_color
0089   8572 11 00 30        ld de, 12288  
0090   8575 01 00 04        ld bc, 1024  
0091   8578 CD 5C 00        call  LDIRVM 
0092   857B C9          	ret
0093   857C             
0094   857C             
0095   857C             
0096   857C             set_screen2_16x16: 
0097   857C                 ;poner los colores de tinta, fondo y borde
0098   857C 21 E9 F3    	ld      hl,FORCLR
0099   857F 36 0F       	ld      [hl],15 ;le poneos el 15 en tinta que es el blanco
0100   8581 23          	inc     hl
0101   8582 36 01       	ld      [hl],1 ;le metemos 1 en fondo que es el negro
0102   8584 23          	inc		hl
0103   8585 36 01       	ld		[hl],1 ;en borde también el negro
0104   8587 CD 62 00    	call    CHGCLR
0105   858A             
0106   858A             	;click off	
0107   858A AF          	xor	a		
0108   858B 32 DB F3    	ld	[CLIKSW],a
0109   858E             		
0110   858E             	;screen 2
0111   858E 3E 02       	ld a,2
0112   8590 CD 5F 00    	call CHGMOD ;rutina de la bios que cambia el modo de screen
0113   8593             
0114   8593             	;sprites no ampliados de 16x16
0115   8593 06 E2       	ld b,0xe2
0116   8595 0E 01       	ld c,1
0117   8597 CD 47 00    	call WRTVDP
0118   859A             
0119   859A C9          	ret
0120   859B             
0121   859B             load_sprites: 
0122   859B                 ;hemos dibujado 20 sprites
0123   859B 21 2D 8E        ld hl, sprites_definition
0124   859E 11 00 38        ld de, 14336; #3800, aquí es posible utilizar la variable del sistema GRPPAT
0125   85A1 01 C0 02        ld bc, 32*22; 32 bytes por 22 sprites dibujados
0126   85A4 CD 5C 00        call  LDIRVM 
0127   85A7 C9          	ret
0128   85A8             
0129   85A8             show_menu: 
0130   85A8 26 0A           ld h,10 ;x coordinate
0131   85AA 2E 02           ld l,2  ;y coordinate
0132   85AC CD C6 00        call POSIT
0133   85AF 21 23 86        ld hl, message_msx_spain
0134   85B2 CD DD 85        call text_mode_print
0135   85B5             
0136   85B5 26 0C           ld h,12 ;x coordinate
0137   85B7 2E 05           ld l,5  ;y coordinate
0138   85B9 CD C6 00        call POSIT
0139   85BC 21 F9 85        ld hl, message_disco
0140   85BF CD DD 85        call text_mode_print
0141   85C2             
0142   85C2 26 08           ld h,8  ;x coordinate
0143   85C4 2E 0C           ld l,12  ;y coordinate
0144   85C6 CD C6 00        call POSIT
0145   85C9 21 FF 85        ld hl, message_start_game
0146   85CC CD DD 85        call text_mode_print
0147   85CF             
0148   85CF 26 03           ld h,3  ;x coordinate
0149   85D1 2E 13           ld l,19 ;y coordinate
0150   85D3 CD C6 00        call POSIT
0151   85D6 21 0C 86        ld hl, message_press_any_key_to_start
0152   85D9 CD DD 85        call text_mode_print
0153   85DC             
0154   85DC C9              ret
0155   85DD             text_mode_print: 
0156   85DD 7E              ld  a,(hl)          
0157   85DE A7              and a               
0158   85DF C8              ret z               
0159   85E0 CD A2 00        call CHPUT         
0160   85E3 23              inc hl              
0161   85E4 18 F7           jr text_mode_print   
0162   85E6             
0163   85E6             
0164   85E6             message_msx_spain_presents:  db "MSX spain presents",0
0164   85E6 4D535820737061696E2070726573656E747300
0165   85F9             message_disco:  db "Disco",0
0165   85F9 446973636F00
0166   85FF             message_start_game:  db "1.Start game",0
0166   85FF 312E53746172742067616D6500
0167   860C             message_press_any_key_to_start:  db "Press any key to start",0
0167   860C 507265737320616E79206B657920746F20737461727400
0168   8623             message_msx_spain:  db "MSX spain",0 
0168   8623 4D535820737061696E00
0169   862D             
0170   862D             
0171   862D                 
0172   862D             	include "src/vars_msxBios.asm"    
0001+  862D             ;ver las instruciones del z80: http://clrhome.org/table/
0002+  862D             ;ver las instrucciones de la bios: https://map.grauw.nl/resources/msxbios.php
0003+  862D             ;ver las instrucciones: https://www.msx.org/wiki/Z80_Assembler_for_Dummies
0004+  862D             
0005+  862D             ; use RST assembler mnemonic to call
0006+  862D             CHKRAM equ 0x00 ; RST 0x00 > Check RAM and sets slot for command area.
0007+  862D             SYNCHR equ 0x08 ; RST	0x08 > Checks if then current character pointed by HL is one desired.
0008+  862D             CHRGTR equ 0x10 ; RST	0x10 > Gets the next character (or token) of the Basic-text
0009+  862D             OUTDO  equ 0x18 ; RST	0x18 > Output to current outputchannel (printer, diskfile, etc.)
0010+  862D             DCOMPR equ 0x20 ; RST	0x20 > Compares HL with DE
0011+  862D             GETYPR equ 0x28 ; RST	0x28 > Returns Type of DAC
0012+  862D             CALLF  equ 0x30 ; RST	0x30 > Executes an interslot call
0013+  862D             KEYINT equ 0x38 ; RST	0x38 > Executes the timer interrupt process routine
0014+  862D             
0015+  862D             ; use CALL assembler mnemonic
0016+  862D             RDSLT  equ 0x000C ; Reads the value of an address in another slot
0017+  862D             WRSLT  equ 0x0014 ; Writes a value to an address in another slot
0018+  862D             CALSLT equ 0x001C ; Executes inter-slot call
0019+  862D             ENASLT equ 0x0024 ; Switches indicated slot at indicated page on perpetual
0020+  862D             
0021+  862D             ; Initialization-routines
0022+  862D             INITIO equ 0x003B ; Initialises the device
0023+  862D             INIFNK equ 0x003E ; Initialises the contents of the function keys
0024+  862D             
0025+  862D             ; VDP routines
0026+  862D             DISSCR equ 0x0041 ; inhibits the screen display
0027+  862D             ENASCR equ 0x0044 ; displays the screen
0028+  862D             WRTVDP equ 0x0047 ; write data in the VDP-register, B  - Data to write, C  - Number of the register
0029+  862D             RDVRM  equ 0x004A ; Reads the content of VRAM
0030+  862D             WRTVRM equ 0x004D ; Writes data in VRAM
0031+  862D             SETRD  equ 0x0050 ; Enable VDP to read
0032+  862D             SETWRT equ 0x0053 ; Enable VDP to write
0033+  862D             FILVRM equ 0x0056 ; fill VRAM with value
0034+  862D             LDIRMV equ 0x0059 ; Block transfer to memory from VRAM
0035+  862D             LDIRVM equ 0x005C ; Block transfer to VRAM from memory
0036+  862D             CHGMOD equ 0x005F ; Switches to given screenmode
0037+  862D             CHGCLR equ 0x0062 ; Changes the screencolors
0038+  862D             CLRSPR equ 0x0069 ; Initialises all sprites
0039+  862D             INITXT equ 0x006C ; Switches to SCREEN 0 (text screen with 40 * 24 characters)
0040+  862D             INIT32 equ 0x006F ; Switches to SCREEN 1 (text screen with 32*24 characters)
0041+  862D             INIGRP equ 0x0072 ; Switches to SCREEN 2 (high resolution screen with 256*192 pixels)
0042+  862D             INIMLT equ 0x0075 ; Switches to SCREEN 3 (multi-color screen 64*48 pixels)
0043+  862D             SETTXT equ 0x0078 ; Switches to VDP in SCREEN 0 mode
0044+  862D             SETT32 equ 0x007B ; Switches VDP in SCREEN mode 1
0045+  862D             SETGRP equ 0x007E ; Switches VDP to SCREEN 2 mode
0046+  862D             SETMLT equ 0x0081 ; Switches VDP to SCREEN 3 mode
0047+  862D             CALPAT equ 0x0084 ; Returns the address of the sprite pattern table
0048+  862D             CALATR equ 0x0087 ; Returns the address of the sprite attribute table
0049+  862D             GSPSIZ equ 0x008A ; Returns current sprite size
0050+  862D             GRPPRT equ 0x008D ; Displays a character on the graphic screen
0051+  862D             
0052+  862D                     
0053+  862D             ; PSG routines
0054+  862D             GICINI equ 0x0090 ; Initialises PSG and sets initial value for the PLAY statement
0055+  862D             WRTPSG equ 0x0093 ; Writes data to PSG-register
0056+  862D             ;Input    : A  - PSG register number
0057+  862D             ;           E  - Data write
0058+  862D             RDPSG  equ 0x0096 ; Reads value from PSG-register
0059+  862D             STRTMS equ 0x0099 ; Tests whether the PLAY statement is being executed as a background task. If not, begins to execute the PLAY statement  */
0060+  862D             
0061+  862D             ; Console routines, rutinas de consola
0062+  862D             CHSNS  equ 0x009C ; Tests the status of the keyboard buffer
0063+  862D             CHGET  equ 0x009F ; One character input (waiting)
0064+  862D             CHPUT  equ 0x00A2 ; Displays one character
0065+  862D             LPTOUT equ 0x00A5 ; Sends one character to printer
0066+  862D             LPTSTT equ 0x00A8 ; Tests printer status
0067+  862D             CNVCHR equ 0x00AB ; tests for the graphic header and transforms the code
0068+  862D             PINLIN equ 0x00AE ; Stores in the specified buffer the character codes input until the return key or STOP key is pressed     */
0069+  862D             INLIN  equ 0x00B1 ; Same as PINLIN except that AUGFLG (#F6AA) is set
0070+  862D             QINLIN equ 0x00B4 ; Prints a questionmark andone space
0071+  862D             BREAKX equ 0x00B7 ; Tests status of CTRL-STOP 
0072+  862D             ISCNTC equ 0x00BA ; Tests status of SHIFT-STOP 
0073+  862D             CKCNTC equ 0x00BD ; Same as ISCNTC. used in Basic
0074+  862D             BEEP   equ 0x00C0 ; generates beep
0075+  862D             BCLS   equ 0x00C3 ; Clears the screen
0076+  862D             POSIT  equ 0x00C6 ; Places the cursor at the specified location
0077+  862D             FNKSB  equ 0x00C9 ; Tests whether the function key display is active (FNKFLG)If so, displays them, otherwise erase them */
0078+  862D             ERAFNK equ 0x00CC ; Erase functionkey display
0079+  862D             DSPFNK equ 0x00CF ; Displays the function keys
0080+  862D             TOTEXT equ 0x00D2 ; Forces the screen to be in the text mode
0081+  862D             
0082+  862D             ; Controller routines                      
0083+  862D             GTSTCK equ 0x00D5 ; Returns the joystick status
0084+  862D             GTTRIG equ 0x00D8 ; Returns current trigger status
0085+  862D             GTPAD  equ 0x00DB ; Returns current touch pad status
0086+  862D             GTPDL  equ 0x00DE ; Returns currenct value of paddle
0087+  862D             
0088+  862D             ; Tape device routines                      
0089+  862D             TAPION equ 0x00E1 ; Reads the header block after turning the cassette motor on
0090+  862D             TAPIN  equ 0x00E4 ; Read data from the tape
0091+  862D             TAPIOF equ 0x00E7 ; Stops reading from the tape
0092+  862D             TAPOON equ 0x00EA ; Turns on the cassette motor and writes the header
0093+  862D             TAPOUT equ 0x00ED ; Writes data on the tape
0094+  862D             TAPOOF equ 0x00F0 ; Stops writing on the tape
0095+  862D             STMOTR equ 0x00F3 ; Sets the cassette motor action
0096+  862D             
0097+  862D             ; Queue routines                      
0098+  862D             LFTQ equ 0x00F6 ; Gives number of bytes in queue
0099+  862D             PUTQ equ 0x00F9 ; Put byte in queue
0100+  862D             
0101+  862D             ; Graphic routines
0102+  862D             ;More info (MSX Assembly Page): http:;map.grauw.nl/resources/msxbios.php                      
0103+  862D             RIGHTC equ 0x00FC ; Shifts screenpixel to the right
0104+  862D             LEFTC  equ 0x00FF ; Shifts screenpixel to the left
0105+  862D             UPC    equ 0x0102 ; Shifts screenpixel up
0106+  862D             TUPC   equ 0x0105 ; Tests whether UPC is possible, if possible, execute UPC
0107+  862D             DOWNC  equ 0x0108 ; Shifts screenpixel down
0108+  862D             TDOWNC equ 0x010B ; Tests whether DOWNC is possible, if possible, execute DOWNC
0109+  862D             SCALXY equ 0x010E ; Scales X and Y coordinates
0110+  862D             MAPXY  equ 0x0111 ; Places cursor at current cursor address
0111+  862D             FETCHC equ 0x0114 ; Gets current cursor addresses mask pattern
0112+  862D             STOREC equ 0x0117 ; Record current cursor addresses mask pattern
0113+  862D             SETATR equ 0x011A ; Set attribute byte
0114+  862D             READC  equ 0x011E ; Reads attribute byte of current screenpixel
0115+  862D             SETC   equ 0x0120 ; Returns currenct screenpixel of specificed attribute byte
0116+  862D             NSETCX equ 0x0123 ; Set horizontal screenpixels
0117+  862D             GTASPC equ 0x0126 ; Gets screen relations
0118+  862D             PNTINI equ 0x0129 ; Initalises the PAINT instruction
0119+  862D             SCANR  equ 0x012C ; Scans screenpixels to the right
0120+  862D             SCANL  equ 0x012F ; Scans screenpixels to the left
0121+  862D             
0122+  862D             ; Graphic routines MSX2
0123+  862D             ;More info (MSX Assembly Page): http:;map.grauw.nl/resources/msxbios.php#msx2bios
0124+  862D             CHKNEW equ 0x0165 ;Tests screen mode > C-flag set if screenmode = 5, 6, 7 or 8
0125+  862D             BIGFIL equ 0x016B ;fill VRAM with value (total VRAM can be reached) HL address, BC length, A data
0126+  862D             NSETRD equ 0x016E ;Enable VDP to read.(with full 16 bits VRAM-address)
0127+  862D             NSTWRT equ 0x0171 ;Enable VDP to write.(with full 16 bits VRAM-address) 
0128+  862D             NRDVRM equ 0x0174 ;Reads VRAM like in RDVRM.(with full 16 bits VRAM-address)
0129+  862D             NWRVRM equ 0x0177 ;Writes to VRAM like in WRTVRM.(with full 16 bits VRAM-address)
0130+  862D             
0131+  862D             
0132+  862D             
0133+  862D             
0134+  862D             
0135+  862D             
0136+  862D                                  
0137+  862D             ; Misc routines
0138+  862D             CLIKSW equ 0xF3DB; para que no se oiga el click que hace al pulsar las teclas
0139+  862D             CHGCAP equ 0x0132 ; Alternates the CAP lamp status
0140+  862D             CHGSND equ 0x0135 ; Alternates the 1-bit sound port status
0141+  862D             RSLREG equ 0x0138 ; Reads the primary slot register
0142+  862D             WSLREG equ 0x013B ; Writes value to the primary slot register
0143+  862D             RDVDP  equ 0x013E ; Reads VDP status register
0144+  862D             SNSMAT equ 0x0141 ; Returns the value of the specified line from the keyboard matrix
0145+  862D             ; 0   1          2           3           4           5           6           7           8       9       10
0146+  862D             ;0    1          2                      4           5           6
0147+  862D             ;1   ; fin grabr ' grabar                                                    Ñ
0148+  862D             ;2                                      \grabar2  DEADfingrabar2 A           B
0149+  862D             ;3 C                        F           G           H
0150+  862D             ;4                          N
0151+  862D             ;5 S                        V                       X                       Z
0152+  862D             ;6SHIFtONTROL    GRAPH      CAPS        CODE
0153+  862D             ;7              ESCAPE                              BS                      RET
0154+  862D             ;8                                               Cursor ^    Cursor v
0155+  862D             PHYDIO equ 0x0144 ; Executes I/O for mass-storage media like diskettes
0156+  862D             FORMAT equ 0x0147 ; Initialises mass-storage media like formatting of diskettes
0157+  862D             ISFLIO equ 0x014A ; Tests if I/O to device is taking place
0158+  862D             OUTDLP equ 0x014E ; Printer output
0159+  862D             GETVCP equ 0x0150 ; Returns pointer to play queue
0160+  862D             GETVC2 equ 0x0153 ; Returns pointer to variable in queue number VOICEN (byte op #FB38)
0161+  862D             KILBUF equ 0x0156 ; Clear keyboard buffer
0162+  862D             CALBAS equ 0x0159 ; Executes inter-slot call to the routine in BASIC interpreter
0163+  862D             
0164+  862D             
0165+  862D             
0166+  862D                     
0167+  862D             
0173   862D             	include "src/vars_msxSystem.asm"    
0001+  862D             ;ver las instrucciones del z80
0002+  862D             ;ver las instruciones del z80: http://clrhome.org/table/
0003+  862D             ;variables del sistema
0004+  862D             ;https://www.msx.org/wiki/System_variables_and_work_area
0005+  862D             
0006+  862D             
0007+  862D             
0008+  862D             ;Slots
0009+  862D             ;---------
0010+  862D             
0011+  862D             ;SLOTs
0012+  862D             SLOT0 equ #FCC1
0013+  862D             SLOT1 equ #FCC2
0014+  862D             SLOT2 equ #FCC3
0015+  862D             SLOT3 equ #FCC4
0016+  862D             
0017+  862D             ;Interruptions
0018+  862D             ;-------------------
0019+  862D             ;Contiene el valor del reloj del software, cada interrupción del VDP se incrementa en 1
0020+  862D             ;El contenido se puede leer o cambiar mediante la función 'TIME' o la instrucción 'TIME'
0021+  862D             JIFFY  equ 0xFC9E
0022+  862D             
0023+  862D             ;Graphics
0024+  862D             ;-------------------
0025+  862D             gxpos equ 0xfcb3
0026+  862D             gypos equ 0xfcb5
0027+  862D             bios_line equ 0x58C1
0028+  862D             
0029+  862D             
0030+  862D             ;VDP registers
0031+  862D             ;------------------- 
0032+  862D             RG0SAV equ 0xF3DF   ;System saves here the byte written to the register R#00, Used by VDP(0)
0033+  862D             RG1SAV equ 0xF3E0   ;System saves here the byte written to the register R#01, Used by VDP(1)
0034+  862D             RG2SAV equ 0xF3E1   ;System saves here the byte written to the register R#02, Used by VDP(2)
0035+  862D             RG3SAV equ 0xF3E2   ;System saves here the byte written to the register R#03, Used by VDP(3)
0036+  862D             RG4SAV equ 0xF3E3   ;System saves here the byte written to the register R#04, Used by VDP(4)
0037+  862D             RG5SAV equ 0xF3E4   ;System saves here the byte written to the register R#05, Used by VDP(5)
0038+  862D             RG6SAV equ 0xF3E5   ;System saves here the byte written to the register R#06, Used by VDP(6)
0039+  862D             RG7SAV equ 0xF3E6   ;System saves here the byte written to the register R#07.at start, Used by VDP(7)
0040+  862D             STATFL equ 0xF3E7   ;System saves here the byte read from the status register R#00, Used by VDP(0)
0041+  862D             
0042+  862D             ;Screen Parameters
0043+  862D             FORCLR equ 0xF3E9     ;Foreground colour
0044+  862D             BAKCLR equ 0xF3EA     ;Background colour
0045+  862D             BDRCLR equ 0xF3EB     ;Border colour
0046+  862D             LINL40 equ 0xF3AE     ;Screen width per line in SCREEN 0 (Default 39)
0047+  862D             LINL32 equ 0xF3AF     ;Screen width per line in SCREEN 1 (Default 29)
0048+  862D             LINLEN equ 0xF3B0     ;Current screen width per line
0049+  862D             CRTCNT equ 0xF3B1     ;Number of lines of current screen (default 24)
0050+  862D             CLMLST equ 0xF3B2     ;X-location in the case that items are divided by commas in PRINT. (LINLEN-(LINLEN MOD 14)-14)
0051+  862D             TXTNAM equ 0xF3B3     ;SCREEN 0 pattern name tabte address
0052+  862D             TXTCOL equ 0xF3B5     ;SCREEN 0 color table address
0053+  862D             TXTCGP equ 0xF3B7     ;SCREEN 0 Pattern generator table address
0054+  862D             TXTATR equ 0xF3B9     ;Unused
0055+  862D             TXTPAT equ 0xF3BB     ;Unused
0056+  862D             T32NAM equ 0xF3BD     ;SCREEN 1 pattern name table address
0057+  862D             T32COL equ 0xF3BF     ;SCREEN 1 color table address
0058+  862D             T32CGP equ 0xF3C1     ;SCREEN 1 pattern ganarator table address
0059+  862D             T32ATR equ 0xF3C3     ;SCREEN 1 sprite attribute table address
0060+  862D             T32PAT equ 0xF3C5     ;SCREEN 1 sprite generator table address
0061+  862D             GRPNAM equ 0xF3C7     ;SCREEN 2 pattern name table address
0062+  862D             GRPCOL equ 0xF3C9     ;SCREEN 2 color table address
0063+  862D             GRPCGP equ 0xF3CB     ;SCREEN 2 pattern generator table address
0064+  862D             GRPATR equ 0xF3CD     ;SCREEN 2 sprite attribute table address
0065+  862D             GRPPAT equ 0xF3CF     ;SCREEN 2 sprite generator table address
0066+  862D             MLTNAM equ 0xF3D1     ;SCREEN 3 pattern name tabte address
0067+  862D             MLTCOL equ 0xF3D3     ;SCREEN 3 color table address
0068+  862D             MLTCGP equ 0xF3D5     ;SCREEN 3 pattern generator table address
0069+  862D             MLTATR equ 0xF3D7     ;SCREEN 3 sprite attribute table address
0070+  862D             MLTPAT equ 0xF3D9     ;SCREEN 3 sprite generator table address
0071+  862D             TRCFLG equ 0xF7C4     ;Tracing flag. 0 = No tracing; Other = Tracing in progress
0072+  862D             CGPNT  equ 0xF91F     ;Location of the character font used to initialise screen 
0073+  862D                                   ;CGPNT = Slot ID
0074+  862D                                   ;CGPNT+1 = Address
0075+  862D             NAMBAS	equ 0xF922    ;Current pattern name table address
0076+  862D             CGPBAS	equ 0xF924    ;Current pattern generator table address
0077+  862D             PATBAS	equ 0xF926    ;Current sprite generator table address
0078+  862D             ATRBAS	equ 0xF928    ;Current sprite attribute table address
0079+  862D             CLOC	equ 0xF92A    ;Graphic cursor location
0080+  862D             CMASK	equ 0xF92C    ;Graphic cursor mask (SCREEN 2 to 4) or ordinate (SCREEN 5 to 12)
0081+  862D             DPPAGE	equ 0xFAF5    ;Displayed page number. (MSX2~)Modified by SETPAGE X
0082+  862D             ACPAGE	equ 0xFAF6    ;Destination page number. (MSX2~)Modified by SETPAGE ,X
0083+  862D             MODE	equ 0xFAFC    ;Flag for screen mode
0084+  862D                                 ;bit 7: 1 = conversion to Katakana; 0 = conversion to Hiragana. (MSX2+~)
0085+  862D                                 ;bit 6: 1 if Kanji ROM level 2. (MSX2+~)
0086+  862D                                 ;bit 5: 0/1 to draw in RGB / YJK mode SCREEN 10 or 11. (MSX2+~)
0087+  862D                                 ;bit 4: 0/1 to limit the Y coordinate to 211/255. (MSX2+~)
0088+  862D                                 ;bit 3: 1 to apply the mask in SCREEN 0~3
0089+  862D                                 ;bits 1-2: VRAM size
0090+  862D                                 ;	   00 for 16kB
0091+  862D                                 ;	   01 for 64kB
0092+  862D                                 ;	   10 for 128kB
0093+  862D                                 ;	   11 for 192kB
0094+  862D                                 ;bit 0: 1 if the conversion of Romaji to Kana is possible. (MSX2~)
0095+  862D             LINWRK	equ 0xFC18    ;40	Work area for screen management
0096+  862D             PATWRK	equ 0xFC40    ;8	Returned character pattern by the routine GETPAT
0097+  862D             GRPHED	equ 0xFCA6    ;1	Heading for the output of graphic characters
0098+  862D             SCRMOD	equ 0xFCAF    ;1	Screen mode
0099+  862D             OLDSCR	equ 0xFCB0    ;1	Old screen mode
0100+  862D             NORUSE	equ 0xFAFD    ;1	Used by KANJI-ROM for rendering KANJI fonts in graphic modes. (MSX2~)
0101+  862D                                 ;bit 7 Don't return to textmode
0102+  862D                                 ;bit 6 if 1 and F7F4h (DECCNT)=0, read SHIFT status ???
0103+  862D                                 ;bit 5 Disable some functinality
0104+  862D                                 ;bit 4 Not in use	
0105+  862D                                 ;bit 3 color 0 = Transparent
0106+  862D                                 ;bit 0-2: Logical operation on kanji font draw
0107+  862D                                 ;	  0 for PSET
0108+  862D                                 ;	  1 for AND
0109+  862D                                 ;	  2 for OR
0110+  862D                                 ;	  3 for XOR
0111+  862D                                 ;	  4 for NOT
0112+  862D             LOGOPR  equ 0xFB02        ;1	Logical operation code. (MSX2~)
0113+  862D             GXPOS	equ 0xFCB3        ;2	X-position of graphic cursor
0114+  862D             GYPOS	equ 0xFCB5        ;2	Y-position of graphic cursor
0115+  862D             GRPACX  equ 0xFCB7        ;2	X Graphics Accumulator, posicionar cursor en modo gráfico    
0116+  862D             GRPACY  equ 0xFCB9        ;2	Y Graphics Accumulator, posicionar cursor en modo gráfico    
0117+  862D             
0174   862D             
0175   862D             	include "src/tileset-definition.asm"
0001+  862D             tileset_definition: 	
0002+  862D             	db 255,255,255,255,255,255,255,255
0002+  862D FFFFFFFFFFFFFFFF
0003+  8635             	db 255,255,255,255,255,255,255,255
0003+  8635 FFFFFFFFFFFFFFFF
0004+  863D             	db 0,0,0,0,255,255,255,255
0004+  863D 00000000FFFFFFFF
0005+  8645             	db 0,0,0,0,0,0,255,255
0005+  8645 000000000000FFFF
0006+  864D             	db 1,3,7,15,31,63,127,255
0006+  864D 0103070F1F3F7FFF
0007+  8655             	db 128,192,224,240,248,252,254,255
0007+  8655 80C0E0F0F8FCFEFF
0008+  865D             	db 255,255,255,255,255,255,255,255
0008+  865D FFFFFFFFFFFFFFFF
0009+  8665             	db 0,0,0,0,255,255,255,255
0009+  8665 00000000FFFFFFFF
0010+  866D             	db 0,0,0,0,0,0,255,255
0010+  866D 000000000000FFFF
0011+  8675             	db 1,3,7,15,31,63,127,255
0011+  8675 0103070F1F3F7FFF
0012+  867D             	db 128,192,224,240,248,252,254,255
0012+  867D 80C0E0F0F8FCFEFF
0013+  8685             	db 255,255,255,255,255,255,255,255
0013+  8685 FFFFFFFFFFFFFFFF
0014+  868D             	db 0,0,0,0,255,255,255,255
0014+  868D 00000000FFFFFFFF
0015+  8695             	db 0,0,0,0,0,0,255,255
0015+  8695 000000000000FFFF
0016+  869D             	db 1,3,7,15,31,63,127,255
0016+  869D 0103070F1F3F7FFF
0017+  86A5             	db 128,192,224,240,248,252,254,3
0017+  86A5 80C0E0F0F8FCFE03
0018+  86AD             	db 255,255,255,255,255,255,255,255
0018+  86AD FFFFFFFFFFFFFFFF
0019+  86B5             	db 0,0,0,0,255,255,255,255
0019+  86B5 00000000FFFFFFFF
0020+  86BD             	db 0,0,0,0,0,0,255,255
0020+  86BD 000000000000FFFF
0021+  86C5             	db 1,3,7,15,31,63,127,255
0021+  86C5 0103070F1F3F7FFF
0022+  86CD             	db 128,192,224,240,248,252,254,255
0022+  86CD 80C0E0F0F8FCFEFF
0023+  86D5             	db 255,255,255,255,255,255,255,255
0023+  86D5 FFFFFFFFFFFFFFFF
0024+  86DD             	db 0,0,0,0,193,255,255,255
0024+  86DD 00000000C1FFFFFF
0025+  86E5             	db 0,0,0,0,0,0,255,255
0025+  86E5 000000000000FFFF
0026+  86ED             	db 1,3,7,15,31,63,127,255
0026+  86ED 0103070F1F3F7FFF
0027+  86F5             	db 128,192,224,240,248,252,254,255
0027+  86F5 80C0E0F0F8FCFEFF
0028+  86FD             	db 255,255,255,255,255,255,255,255
0028+  86FD FFFFFFFFFFFFFFFF
0029+  8705             	db 0,0,0,0,255,255,255,255
0029+  8705 00000000FFFFFFFF
0030+  870D             	db 0,0,0,0,0,0,255,255
0030+  870D 000000000000FFFF
0031+  8715             	db 1,3,7,15,31,63,127,255
0031+  8715 0103070F1F3F7FFF
0032+  871D             	db 128,192,224,240,248,252,254,255
0032+  871D 80C0E0F0F8FCFEFF
0033+  8725             	db 0,0,0,0,0,0,0,0
0033+  8725 0000000000000000
0034+  872D             	db 255,129,129,129,129,129,129,255
0034+  872D FF818181818181FF
0035+  8735             	db 0,127,127,127,127,127,127,127
0035+  8735 007F7F7F7F7F7F7F
0036+  873D             	db 254,254,254,254,254,254,254,0
0036+  873D FEFEFEFEFEFEFE00
0037+  8745             	db 255,255,255,255,255,255,255,255
0037+  8745 FFFFFFFFFFFFFFFF
0038+  874D             	db 255,255,255,255,255,255,255,255
0038+  874D FFFFFFFFFFFFFFFF
0039+  8755             	db 0,127,127,127,127,127,127,127
0039+  8755 007F7F7F7F7F7F7F
0040+  875D             	db 254,254,254,254,254,254,254,0
0040+  875D FEFEFEFEFEFEFE00
0041+  8765             	db 255,224,192,64,32,196,40,9
0041+  8765 FFE0C04020C42809
0042+  876D             	db 0,192,15,7,7,135,199,71
0042+  876D 00C00F070787C747
0043+  8775             	db 255,3,240,240,15,14,19,224
0043+  8775 FF03F0F00F0E13E0
0044+  877D             	db 255,15,7,3,35,47,12,7
0044+  877D FF0F0703232F0C07
0045+  8785             	db 192,192,67,112,51,34,13,135
0045+  8785 C0C0437033220D87
0046+  878D             	db 224,31,15,15,143,207,207,135
0046+  878D E01F0F0F8FCFCF87
0047+  8795             	db 255,248,224,224,227,225,241,228
0047+  8795 FFF8E0E0E3E1F1E4
0048+  879D             	db 255,3,2,14,243,147,115,7
0048+  879D FF03020EF3937307
0049+  87A5             	db 224,224,206,27,141,192,226,16
0049+  87A5 E0E0CE1B8DC0E210
0050+  87AD             	db 192,48,240,7,240,143,143,136
0050+  87AD C030F007F08F8F88
0051+  87B5             	db 7,24,224,224,224,24,7,240
0051+  87B5 0718E0E0E01807F0
0052+  87BD             	db 7,7,251,7,7,212,151,207
0052+  87BD 0707FB0707D497CF
0053+  87C5             	db 255,224,224,192,7,7,7,15
0053+  87C5 FFE0E0C00707070F
0054+  87CD             	db 0,224,15,15,15,143,200,7
0054+  87CD 00E00F0F0F8FC807
0055+  87D5             	db 255,255,255,255,255,255,255,255
0055+  87D5 FFFFFFFFFFFFFFFF
0056+  87DD             	db 255,255,255,255,255,255,255,255
0056+  87DD FFFFFFFFFFFFFFFF
0057+  87E5             	db 255,255,143,255,255,255,255,255
0057+  87E5 FFFF8FFFFFFFFFFF
0058+  87ED             	db 255,60,36,0,36,60,0,126
0058+  87ED FF3C2400243C007E
0059+  87F5             	db 24,24,0,24,60,66,255,255
0059+  87F5 181800183C42FFFF
0060+  87FD             	db 0,129,126,60,24,24,60,126
0060+  87FD 00817E3C18183C7E
0061+  8805             	db 0,0,0,255,129,195,126,60
0061+  8805 000000FF81C37E3C
0062+  880D             	db 60,126,255,129,255,66,126,60
0062+  880D 3C7EFF81FF427E3C
0063+  8815             	db 24,24,24,60,255,127,126,60
0063+  8815 1818183CFF7F7E3C
0064+  881D             	db 56,60,126,36,8,129,195,231
0064+  881D 383C7E240881C3E7
0065+  8825             	db 255,8,8,8,8,8,8,8
0065+  8825 FF08080808080808
0066+  882D             	db 0,0,0,0,0,0,0,0
0066+  882D 0000000000000000
0067+  8835             	db 0,0,0,0,0,0,0,0
0067+  8835 0000000000000000
0068+  883D             	db 0,0,0,0,0,0,0,0
0068+  883D 0000000000000000
0069+  8845             	db 0,0,0,0,0,0,0,0
0069+  8845 0000000000000000
0070+  884D             	db 0,0,0,0,0,0,0,0
0070+  884D 0000000000000000
0071+  8855             	db 0,0,0,0,0,0,0,0
0071+  8855 0000000000000000
0072+  885D             	db 0,0,0,0,0,0,0,0
0072+  885D 0000000000000000
0073+  8865             	db 8,24,12,34,48,3,18,225
0073+  8865 08180C22300312E1
0074+  886D             	db 99,193,193,193,28,7,240,143
0074+  886D 63C1C1C11C07F08F
0075+  8875             	db 192,192,192,192,224,240,241,14
0075+  8875 C0C0C0C0E0F0F10E
0076+  887D             	db 71,3,194,96,7,72,135,131
0076+  887D 4703C26007488783
0077+  8885             	db 36,224,176,48,224,18,225,193
0077+  8885 24E0B030E012E1C1
0078+  888D             	db 131,3,11,12,7,15,143,112
0078+  888D 83030B0C070F8F70
0079+  8895             	db 10,68,20,55,224,252,240,14
0079+  8895 0A441437E0FCF00E
0080+  889D             	db 68,227,18,163,84,248,7,199
0080+  889D 44E312A354F807C7
0081+  88A5             	db 36,199,151,56,6,224,227,52
0081+  88A5 24C7973806E0E334
0082+  88AD             	db 7,7,3,112,79,64,31,160
0082+  88AD 070703704F401FA0
0083+  88B5             	db 224,58,56,224,15,15,241,240
0083+  88B5 E03A38E00F0FF1F0
0084+  88BD             	db 135,135,139,3,248,143,135,131
0084+  88BD 87878B03F88F8783
0085+  88C5             	db 15,28,192,224,240,249,241,224
0085+  88C5 0F1CC0E0F0F9F1E0
0086+  88CD             	db 3,136,11,3,7,143,143,112
0086+  88CD 03880B03078F8F70
0087+  88D5             	db 0,0,0,0,0,0,0,0
0087+  88D5 0000000000000000
0088+  88DD             	db 0,56,68,76,16,100,68,56
0088+  88DD 0038444C10644438
0089+  88E5             	db 0,12,4,4,0,4,4,4
0089+  88E5 000C040400040404
0090+  88ED             	db 0,28,2,2,28,32,32,60
0090+  88ED 001C02021C20203C
0091+  88F5             	db 0,28,2,2,12,2,2,28
0091+  88F5 001C02020C02021C
0092+  88FD             	db 0,34,34,34,28,2,2,2
0092+  88FD 002222221C020202
0093+  8905             	db 0,28,32,32,28,2,2,28
0093+  8905 001C20201C02021C
0094+  890D             	db 0,28,32,32,28,34,34,28
0094+  890D 001C20201C22221C
0095+  8915             	db 0,28,2,2,0,2,2,2
0095+  8915 001C020200020202
0096+  891D             	db 0,28,34,34,28,34,34,28
0096+  891D 001C22221C22221C
0097+  8925             	db 0,28,34,34,28,2,2,28
0097+  8925 001C22221C02021C
0098+  892D             	db 0,56,68,68,56,68,68,68
0098+  892D 0038444438444444
0099+  8935             	db 0,120,68,68,56,68,68,120
0099+  8935 0078444438444478
0100+  893D             	db 0,56,64,64,0,64,64,56
0100+  893D 0038404000404038
0101+  8945             	db 0,120,68,68,0,68,68,120
0101+  8945 0078444400444478
0102+  894D             	db 0,56,64,64,56,64,64,56
0102+  894D 0038404038404038
0103+  8955             	db 0,56,64,64,56,64,64,64
0103+  8955 0038404038404040
0104+  895D             	db 0,56,64,64,12,68,68,56
0104+  895D 003840400C444438
0105+  8965             	db 0,68,68,68,56,68,68,68
0105+  8965 0044444438444444
0106+  896D             	db 0,16,16,16,0,16,16,16
0106+  896D 0010101000101010
0107+  8975             	db 0,4,4,4,0,68,68,56
0107+  8975 0004040400444438
0108+  897D             	db 0,68,72,80,56,68,68,68
0108+  897D 0044485038444444
0109+  8985             	db 0,32,32,32,0,32,32,28
0109+  8985 002020200020201C
0110+  898D             	db 0,56,84,84,0,68,68,68
0110+  898D 0038545400444444
0111+  8995             	db 0,100,84,76,0,68,68,68
0111+  8995 0064544C00444444
0112+  899D             	db 0,56,68,68,0,68,68,56
0112+  899D 0038444400444438
0113+  89A5             	db 0,56,68,68,56,64,64,64
0113+  89A5 0038444438404040
0114+  89AD             	db 0,56,68,68,0,68,72,52
0114+  89AD 0038444400444834
0115+  89B5             	db 0,56,68,68,56,80,72,68
0115+  89B5 0038444438504844
0116+  89BD             	db 0,60,64,64,56,4,4,120
0116+  89BD 003C404038040478
0117+  89C5             	db 0,124,16,16,0,16,16,16
0117+  89C5 007C101000101010
0118+  89CD             	db 0,68,68,68,0,68,68,56
0118+  89CD 0044444400444438
0119+  89D5             	db 0,68,68,68,8,80,96,64
0119+  89D5 0044444408506040
0120+  89DD             	db 0,68,68,68,0,84,84,56
0120+  89DD 0044444400545438
0121+  89E5             	db 0,68,68,40,16,40,68,68
0121+  89E5 0044442810284444
0122+  89ED             	db 0,68,68,68,56,4,4,56
0122+  89ED 0044444438040438
0123+  89F5             	db 0,60,4,8,16,32,64,120
0123+  89F5 003C040810204078
0124+  89FD             	db 0,0,0,0,0,0,0,0
0124+  89FD 0000000000000000
0125+  8A05             	db 0,0,0,0,0,0,0,0
0125+  8A05 0000000000000000
0126+  8A0D             	db 0,0,0,0,0,0,0,0
0126+  8A0D 0000000000000000
0127+  8A15             	db 0,0,0,0,0,0,0,0
0127+  8A15 0000000000000000
0128+  8A1D             	db 0,0,0,0,0,0,0,0
0128+  8A1D 0000000000000000
0129+  8A25             	db 0,0,0,0,0,0,0,0
0129+  8A25 0000000000000000
0176   8A2D             	include "src/tileset-color.asm"
0001+  8A2D             tileset_color: 	
0002+  8A2D             	db 17,17,17,17,17,17,17,17
0002+  8A2D 1111111111111111
0003+  8A35             	db 209,209,209,209,209,209,209,209
0003+  8A35 D1D1D1D1D1D1D1D1
0004+  8A3D             	db 209,209,209,209,209,209,209,209
0004+  8A3D D1D1D1D1D1D1D1D1
0005+  8A45             	db 209,209,209,209,209,209,209,209
0005+  8A45 D1D1D1D1D1D1D1D1
0006+  8A4D             	db 209,209,209,209,209,209,209,209
0006+  8A4D D1D1D1D1D1D1D1D1
0007+  8A55             	db 209,209,209,209,209,209,209,209
0007+  8A55 D1D1D1D1D1D1D1D1
0008+  8A5D             	db 145,145,145,145,145,145,145,145
0008+  8A5D 9191919191919191
0009+  8A65             	db 145,145,145,145,145,145,145,145
0009+  8A65 9191919191919191
0010+  8A6D             	db 145,145,145,145,145,145,145,145
0010+  8A6D 9191919191919191
0011+  8A75             	db 145,145,145,145,145,145,145,145
0011+  8A75 9191919191919191
0012+  8A7D             	db 145,145,145,145,145,145,145,145
0012+  8A7D 9191919191919191
0013+  8A85             	db 113,113,113,113,113,113,113,113
0013+  8A85 7171717171717171
0014+  8A8D             	db 113,113,113,113,113,113,113,113
0014+  8A8D 7171717171717171
0015+  8A95             	db 113,113,113,113,113,113,113,113
0015+  8A95 7171717171717171
0016+  8A9D             	db 113,113,113,113,113,113,113,113
0016+  8A9D 7171717171717171
0017+  8AA5             	db 113,113,113,113,113,113,113,231
0017+  8AA5 71717171717171E7
0018+  8AAD             	db 65,65,65,65,65,65,65,65
0018+  8AAD 4141414141414141
0019+  8AB5             	db 65,65,65,65,65,65,65,65
0019+  8AB5 4141414141414141
0020+  8ABD             	db 65,65,65,65,65,65,65,65
0020+  8ABD 4141414141414141
0021+  8AC5             	db 65,65,65,65,65,65,65,65
0021+  8AC5 4141414141414141
0022+  8ACD             	db 65,65,65,65,65,65,65,65
0022+  8ACD 4141414141414141
0023+  8AD5             	db 49,49,49,49,49,49,49,49
0023+  8AD5 3131313131313131
0024+  8ADD             	db 49,49,49,49,50,50,50,50
0024+  8ADD 3131313132323232
0025+  8AE5             	db 17,17,17,17,17,17,49,49
0025+  8AE5 1111111111113131
0026+  8AED             	db 49,49,49,49,49,49,49,49
0026+  8AED 3131313131313131
0027+  8AF5             	db 49,49,49,49,49,49,49,49
0027+  8AF5 3131313131313131
0028+  8AFD             	db 225,225,225,225,225,225,225,225
0028+  8AFD E1E1E1E1E1E1E1E1
0029+  8B05             	db 225,225,225,225,225,225,225,225
0029+  8B05 E1E1E1E1E1E1E1E1
0030+  8B0D             	db 225,225,225,225,225,225,225,225
0030+  8B0D E1E1E1E1E1E1E1E1
0031+  8B15             	db 225,225,225,225,225,225,225,225
0031+  8B15 E1E1E1E1E1E1E1E1
0032+  8B1D             	db 225,225,225,225,225,225,225,225
0032+  8B1D E1E1E1E1E1E1E1E1
0033+  8B25             	db 225,225,225,225,225,225,225,225
0033+  8B25 E1E1E1E1E1E1E1E1
0034+  8B2D             	db 145,154,154,154,154,154,154,154
0034+  8B2D 919A9A9A9A9A9A9A
0035+  8B35             	db 17,241,241,241,241,241,241,241
0035+  8B35 11F1F1F1F1F1F1F1
0036+  8B3D             	db 241,241,241,241,241,241,241,241
0036+  8B3D F1F1F1F1F1F1F1F1
0037+  8B45             	db 241,241,241,241,241,241,241,241
0037+  8B45 F1F1F1F1F1F1F1F1
0038+  8B4D             	db 161,161,161,161,161,161,161,161
0038+  8B4D A1A1A1A1A1A1A1A1
0039+  8B55             	db 161,161,161,161,161,161,161,161
0039+  8B55 A1A1A1A1A1A1A1A1
0040+  8B5D             	db 161,161,161,161,161,161,161,161
0040+  8B5D A1A1A1A1A1A1A1A1
0041+  8B65             	db 241,252,225,193,193,254,193,239
0041+  8B65 F1FCE1C1C1FEC1EF
0042+  8B6D             	db 239,207,241,241,241,241,241,254
0042+  8B6D EFCFF1F1F1F1F1FE
0043+  8B75             	db 254,207,241,241,111,111,191,241
0043+  8B75 FECFF1F16F6FBFF1
0044+  8B7D             	db 241,252,241,241,254,254,203,254
0044+  8B7D F1FCF1F1FEFECBFE
0045+  8B85             	db 254,225,193,206,111,193,193,225
0045+  8B85 FEE1C1CE6FC1C1E1
0046+  8B8D             	db 239,241,241,241,241,241,241,241
0046+  8B8D EFF1F1F1F1F1F1F1
0047+  8B95             	db 241,241,241,241,241,241,241,225
0047+  8B95 F1F1F1F1F1F1F1E1
0048+  8B9D             	db 241,225,193,206,225,236,236,241
0048+  8B9D F1E1C1CEE1ECECF1
0049+  8BA5             	db 254,241,225,97,185,251,251,239
0049+  8BA5 FEF1E161B9FBFBEF
0050+  8BAD             	db 239,239,111,254,223,241,241,239
0050+  8BAD EFEF6FFEDFF1F1EF
0051+  8BB5             	db 239,239,250,250,250,207,191,241
0051+  8BB5 EFEFFAFAFACFBFF1
0052+  8BBD             	db 254,241,161,250,251,239,235,241
0052+  8BBD FEF1A1FAFBEFEBF1
0053+  8BC5             	db 241,254,241,241,97,239,239,111
0053+  8BC5 F1FEF1F161EFEF6F
0054+  8BCD             	db 111,239,241,241,241,241,239,241
0054+  8BCD 6FEFF1F1F1F1EFF1
0055+  8BD5             	db 145,145,145,145,145,145,145,145
0055+  8BD5 9191919191919191
0056+  8BDD             	db 145,145,145,145,145,145,145,145
0056+  8BDD 9191919191919191
0057+  8BE5             	db 145,145,145,145,145,145,145,145
0057+  8BE5 9191919191919191
0058+  8BED             	db 49,147,147,147,147,147,147,49
0058+  8BED 3193939393939331
0059+  8BF5             	db 49,49,49,49,49,57,57,57
0059+  8BF5 3131313131393939
0060+  8BFD             	db 57,151,113,145,145,145,145,145
0060+  8BFD 3997719191919191
0061+  8C05             	db 145,145,145,145,151,151,145,145
0061+  8C05 9191919197979191
0062+  8C0D             	db 145,145,145,159,159,159,145,145
0062+  8C0D 9191919F9F9F9191
0063+  8C15             	db 145,145,145,145,145,145,145,145
0063+  8C15 9191919191919191
0064+  8C1D             	db 122,122,122,247,231,167,167,167
0064+  8C1D 7A7A7AF7E7A7A7A7
0065+  8C25             	db 145,122,122,122,122,122,122,122
0065+  8C25 917A7A7A7A7A7A7A
0066+  8C2D             	db 17,17,17,17,17,17,17,17
0066+  8C2D 1111111111111111
0067+  8C35             	db 17,17,17,17,17,17,17,17
0067+  8C35 1111111111111111
0068+  8C3D             	db 17,17,17,17,17,17,17,17
0068+  8C3D 1111111111111111
0069+  8C45             	db 17,17,17,17,17,17,17,17
0069+  8C45 1111111111111111
0070+  8C4D             	db 17,17,17,17,17,17,17,17
0070+  8C4D 1111111111111111
0071+  8C55             	db 17,17,17,17,17,17,17,17
0071+  8C55 1111111111111111
0072+  8C5D             	db 17,17,17,17,17,17,17,17
0072+  8C5D 1111111111111111
0073+  8C65             	db 239,239,239,239,193,193,239,241
0073+  8C65 EFEFEFEFC1C1EFF1
0074+  8C6D             	db 254,254,254,254,206,241,207,241
0074+  8C6D FEFEFEFECEF1CFF1
0075+  8C75             	db 225,225,225,241,241,241,241,239
0075+  8C75 E1E1E1F1F1F1F1EF
0076+  8C7D             	db 241,241,193,193,241,239,241,254
0076+  8C7D F1F1C1C1F1EFF1FE
0077+  8C85             	db 193,241,225,193,241,239,241,254
0077+  8C85 C1F1E1C1F1EFF1FE
0078+  8C8D             	db 241,225,241,193,241,241,241,239
0078+  8C8D F1E1F1C1F1F1F1EF
0079+  8C95             	db 193,239,97,97,254,254,241,207
0079+  8C95 C1EF6161FEFEF1CF
0080+  8C9D             	db 193,225,198,225,239,239,241,252
0080+  8C9D C1E1C6E1EFEFF1FC
0081+  8CA5             	db 239,246,246,78,193,254,241,239
0081+  8CA5 EFF6F64EC1FEF1EF
0082+  8CAD             	db 253,253,254,79,241,159,241,239
0082+  8CAD FDFDFE4FF19FF1EF
0083+  8CB5             	db 241,193,193,241,111,207,241,254
0083+  8CB5 F1C1C1F16FCFF1FE
0084+  8CBD             	db 241,236,225,241,207,241,241,254
0084+  8CBD F1ECE1F1CFF1F1FE
0085+  8CC5             	db 207,207,246,241,241,241,241,254
0085+  8CC5 CFCFF6F1F1F1F1FE
0086+  8CCD             	db 225,193,225,241,241,241,241,239
0086+  8CCD E1C1E1F1F1F1F1EF
0087+  8CD5             	db 17,17,17,17,17,17,17,17
0087+  8CD5 1111111111111111
0088+  8CDD             	db 17,49,49,49,49,49,49,49
0088+  8CDD 1131313131313131
0089+  8CE5             	db 49,49,49,49,49,49,49,49
0089+  8CE5 3131313131313131
0090+  8CED             	db 49,49,49,49,49,49,49,49
0090+  8CED 3131313131313131
0091+  8CF5             	db 49,49,49,49,49,49,49,49
0091+  8CF5 3131313131313131
0092+  8CFD             	db 49,49,49,49,49,49,49,49
0092+  8CFD 3131313131313131
0093+  8D05             	db 49,49,49,49,49,49,49,49
0093+  8D05 3131313131313131
0094+  8D0D             	db 49,49,49,49,49,49,49,49
0094+  8D0D 3131313131313131
0095+  8D15             	db 49,49,49,49,49,49,49,49
0095+  8D15 3131313131313131
0096+  8D1D             	db 49,49,49,49,49,49,49,49
0096+  8D1D 3131313131313131
0097+  8D25             	db 49,49,49,49,49,49,49,49
0097+  8D25 3131313131313131
0098+  8D2D             	db 49,49,49,49,49,49,49,49
0098+  8D2D 3131313131313131
0099+  8D35             	db 49,49,49,49,49,49,49,49
0099+  8D35 3131313131313131
0100+  8D3D             	db 49,49,49,49,49,49,49,49
0100+  8D3D 3131313131313131
0101+  8D45             	db 49,49,49,49,49,49,49,49
0101+  8D45 3131313131313131
0102+  8D4D             	db 49,49,49,49,49,49,49,49
0102+  8D4D 3131313131313131
0103+  8D55             	db 49,49,49,49,49,49,49,49
0103+  8D55 3131313131313131
0104+  8D5D             	db 49,49,49,49,49,49,49,49
0104+  8D5D 3131313131313131
0105+  8D65             	db 49,49,49,49,49,49,49,49
0105+  8D65 3131313131313131
0106+  8D6D             	db 49,49,49,49,49,49,49,49
0106+  8D6D 3131313131313131
0107+  8D75             	db 49,49,49,49,49,49,49,49
0107+  8D75 3131313131313131
0108+  8D7D             	db 49,49,49,49,49,49,49,49
0108+  8D7D 3131313131313131
0109+  8D85             	db 49,49,49,49,49,49,49,49
0109+  8D85 3131313131313131
0110+  8D8D             	db 49,49,49,49,49,49,49,49
0110+  8D8D 3131313131313131
0111+  8D95             	db 49,49,49,49,49,49,49,49
0111+  8D95 3131313131313131
0112+  8D9D             	db 49,49,49,49,49,49,49,49
0112+  8D9D 3131313131313131
0113+  8DA5             	db 49,49,49,49,49,49,49,49
0113+  8DA5 3131313131313131
0114+  8DAD             	db 49,49,49,49,49,49,49,49
0114+  8DAD 3131313131313131
0115+  8DB5             	db 49,49,49,49,49,49,49,49
0115+  8DB5 3131313131313131
0116+  8DBD             	db 49,49,49,49,49,49,49,49
0116+  8DBD 3131313131313131
0117+  8DC5             	db 49,49,49,49,49,49,49,49
0117+  8DC5 3131313131313131
0118+  8DCD             	db 49,49,49,49,49,49,49,49
0118+  8DCD 3131313131313131
0119+  8DD5             	db 49,49,49,49,49,49,49,49
0119+  8DD5 3131313131313131
0120+  8DDD             	db 49,49,49,49,49,49,49,49
0120+  8DDD 3131313131313131
0121+  8DE5             	db 49,49,49,49,49,49,49,49
0121+  8DE5 3131313131313131
0122+  8DED             	db 49,49,49,49,49,49,49,49
0122+  8DED 3131313131313131
0123+  8DF5             	db 49,49,49,49,49,49,49,49
0123+  8DF5 3131313131313131
0124+  8DFD             	db 49,49,49,49,49,49,49,49
0124+  8DFD 3131313131313131
0125+  8E05             	db 49,49,49,49,49,49,49,49
0125+  8E05 3131313131313131
0126+  8E0D             	db 49,49,49,49,49,49,49,49
0126+  8E0D 3131313131313131
0127+  8E15             	db 49,49,49,49,49,49,49,49
0127+  8E15 3131313131313131
0128+  8E1D             	db 49,49,49,49,49,49,49,49
0128+  8E1D 3131313131313131
0129+  8E25             	db 49,49,49,49,49,49,49,49
0129+  8E25 3131313131313131
0177   8E2D             	include "src/spriteset.asm"
0001+  8E2D             sprites_definition: 
0002+  8E2D             ;Definition sprite 0, name: Sprite-2
0003+  8E2D             	db 1,3,7,3,6,7,3,1
0003+  8E2D 0103070306070301
0004+  8E35             	db 1,3,2,2,3,1,1,1
0004+  8E35 0103020203010101
0005+  8E3D             	db 240,240,224,224,208,240,176,224
0005+  8E3D F0F0E0E0D0F0B0E0
0006+  8E45             	db 224,240,208,208,240,224,32,176
0006+  8E45 E0F0D0D0F0E020B0
0007+  8E4D             ;Definition sprite 1, name: Sprite-3
0008+  8E4D             	db 1,1,1,1,3,3,1,0
0008+  8E4D 0101010103030100
0009+  8E55             	db 0,1,1,1,1,0,0,0
0009+  8E55 0001010101000000
0010+  8E5D             	db 240,240,240,240,104,248,232,240
0010+  8E5D F0F0F0F068F8E8F0
0011+  8E65             	db 240,248,168,208,248,240,160,112
0011+  8E65 F0F8A8D0F8F0A070
0012+  8E6D             ;Definition sprite 2, name: Sprite-0
0013+  8E6D             	db 15,15,7,7,11,15,13,7
0013+  8E6D 0F0F07070B0F0D07
0014+  8E75             	db 7,15,11,11,15,7,4,13
0014+  8E75 070F0B0B0F07040D
0015+  8E7D             	db 128,192,224,192,96,224,192,128
0015+  8E7D 80C0E0C060E0C080
0016+  8E85             	db 128,192,64,64,192,128,128,128
0016+  8E85 80C04040C0808080
0017+  8E8D             ;Definition sprite 3, name: Sprite-1
0018+  8E8D             	db 15,15,15,15,22,31,23,15
0018+  8E8D 0F0F0F0F161F170F
0019+  8E95             	db 15,31,21,11,31,15,5,14
0019+  8E95 0F1F150B1F0F050E
0020+  8E9D             	db 128,128,128,128,192,192,128,0
0020+  8E9D 80808080C0C08000
0021+  8EA5             	db 0,128,128,128,128,0,0,0
0021+  8EA5 0080808080000000
0022+  8EAD             ;Definition sprite 4, name: Sprite-4
0023+  8EAD             	db 7,7,7,7,15,15,7,3
0023+  8EAD 070707070F0F0703
0024+  8EB5             	db 7,15,11,9,15,7,2,6
0024+  8EB5 070F0B090F070206
0025+  8EBD             	db 192,192,192,192,224,224,192,128
0025+  8EBD C0C0C0C0E0E0C080
0026+  8EC5             	db 192,224,160,32,224,224,64,96
0026+  8EC5 C0E0A020E0E04060
0027+  8ECD             ;Definition sprite 5, name: Sprite-4
0028+  8ECD             	db 3,7,7,7,15,15,7,3
0028+  8ECD 030707070F0F0703
0029+  8ED5             	db 7,15,13,9,15,7,2,2
0029+  8ED5 070F0D090F070202
0030+  8EDD             	db 128,192,192,192,224,224,192,128
0030+  8EDD 80C0C0C0E0E0C080
0031+  8EE5             	db 192,224,96,32,224,224,96,0
0031+  8EE5 C0E06020E0E06000
0032+  8EED             ;Definition sprite 6, name: Sprite-4
0033+  8EED             	db 7,7,7,7,13,15,6,3
0033+  8EED 070707070D0F0603
0034+  8EF5             	db 7,15,11,13,7,3,2,6
0034+  8EF5 070F0B0D07030206
0035+  8EFD             	db 192,192,192,192,96,224,192,128
0035+  8EFD C0C0C0C060E0C080
0036+  8F05             	db 192,224,160,96,192,192,64,96
0036+  8F05 C0E0A060C0C04060
0037+  8F0D             ;Definition sprite 7, name: Sprite-4
0038+  8F0D             	db 7,7,7,7,13,15,6,3
0038+  8F0D 070707070D0F0603
0039+  8F15             	db 7,15,13,11,7,7,2,2
0039+  8F15 070F0D0B07070202
0040+  8F1D             	db 192,192,192,192,96,224,192,128
0040+  8F1D C0C0C0C060E0C080
0041+  8F25             	db 192,224,96,160,192,192,96,0
0041+  8F25 C0E060A0C0C06000
0042+  8F2D             ;Definition sprite 8, name: Sprite-2
0043+  8F2D             	db 0,0,7,7,15,10,15,13
0043+  8F2D 000007070F0A0F0D
0044+  8F35             	db 7,15,11,29,15,15,31,2
0044+  8F35 070F0B1D0F0F1F02
0045+  8F3D             	db 0,24,248,192,192,192,192,128
0045+  8F3D 0018F8C0C0C0C080
0046+  8F45             	db 0,0,128,128,128,128,0,0
0046+  8F45 0000808080800000
0047+  8F4D             ;Definition sprite 9, name: Sprite-2
0048+  8F4D             	db 0,0,3,3,7,5,7,6
0048+  8F4D 0000030307050706
0049+  8F55             	db 3,7,5,5,7,7,3,2
0049+  8F55 0307050507070302
0050+  8F5D             	db 24,24,240,224,224,96,224,192
0050+  8F5D 1818F0E0E060E0C0
0051+  8F65             	db 128,128,64,64,192,192,128,128
0051+  8F65 80804040C0C08080
0052+  8F6D             ;Definition sprite 10, name: Sprite-4
0053+  8F6D             	db 0,7,7,7,7,7,7,1
0053+  8F6D 0007070707070701
0054+  8F75             	db 7,14,14,15,15,7,2,3
0054+  8F75 070E0E0F0F070203
0055+  8F7D             	db 0,224,240,240,176,224,224,128
0055+  8F7D 00E0F0F0B0E0E080
0056+  8F85             	db 224,240,56,248,240,224,64,96
0056+  8F85 E0F038F8F0E04060
0057+  8F8D             ;Definition sprite 11, name: Sprite-4
0058+  8F8D             	db 0,7,7,7,7,7,7,1
0058+  8F8D 0007070707070701
0059+  8F95             	db 3,7,6,5,7,3,0,0
0059+  8F95 0307060507030000
0060+  8F9D             	db 0,224,240,240,176,224,224,192
0060+  8F9D 00E0F0F0B0E0E0C0
0061+  8FA5             	db 240,120,252,252,248,240,160,144
0061+  8FA5 F078FCFCF8F0A090
0062+  8FAD             ;Definition sprite 12, name: Sprite_name10
0063+  8FAD             	db 3,7,4,7,3,7,31,127
0063+  8FAD 0307040703071F7F
0064+  8FB5             	db 71,67,103,79,31,24,16,56
0064+  8FB5 4743674F1F181038
0065+  8FBD             	db 128,192,64,192,128,192,240,252
0065+  8FBD 80C040C080C0F0FC
0066+  8FC5             	db 196,132,204,228,240,48,16,56
0066+  8FC5 C484CCE4F0301038
0067+  8FCD             ;Definition sprite 13, name: No_name10
0068+  8FCD             	db 3,7,68,103,67,71,95,127
0068+  8FCD 0307446743475F7F
0069+  8FD5             	db 7,3,7,15,15,8,8,12
0069+  8FD5 0703070F0F08080C
0070+  8FDD             	db 128,192,68,204,132,196,244,252
0070+  8FDD 80C044CC84C4F4FC
0071+  8FE5             	db 192,128,192,224,224,32,32,224
0071+  8FE5 C080C0E0E02020E0
0072+  8FED             ;Definition sprite 14, name: Sprite-4
0073+  8FED             	db 0,0,6,7,7,6,7,1
0073+  8FED 0000060707060701
0074+  8FF5             	db 19,15,3,3,2,2,0,0
0074+  8FF5 130F030302020000
0075+  8FFD             	db 0,0,0,224,224,224,224,224
0075+  8FFD 000000E0E0E0E0E0
0076+  9005             	db 200,240,192,192,64,64,0,0
0076+  9005 C8F0C0C040400000
0077+  900D             ;Definition sprite 15, name: Sprite-4
0078+  900D             	db 0,0,0,3,3,7,7,5
0078+  900D 0000000303070705
0079+  9015             	db 7,7,3,7,7,11,2,3
0079+  9015 07070307070B0203
0080+  901D             	db 0,0,0,192,192,224,224,160
0080+  901D 000000C0C0E0E0A0
0081+  9025             	db 224,96,192,224,224,208,64,96
0081+  9025 E060C0E0E0D04060
0082+  902D             ;Definition sprite 16, name: Sprite-4
0083+  902D             	db 3,7,5,7,3,2,3,1
0083+  902D 0307050703020301
0084+  9035             	db 7,15,15,15,7,3,2,2
0084+  9035 070F0F0F07030202
0085+  903D             	db 192,224,160,224,192,64,192,128
0085+  903D C0E0A0E0C040C080
0086+  9045             	db 224,240,240,240,224,192,64,64
0086+  9045 E0F0F0F0E0C04040
0087+  904D             ;Definition sprite 17, name: Sprite-4
0088+  904D             	db 1,3,2,3,1,1,5,4
0088+  904D 0103020301010504
0089+  9055             	db 7,3,3,3,3,1,2,4
0089+  9055 0703030303010204
0090+  905D             	db 224,240,208,240,160,224,232,200
0090+  905D E0F0D0F0A0E0E8C8
0091+  9065             	db 248,240,240,240,240,224,16,8
0091+  9065 F8F0F0F0F0E01008
0092+  906D             ;Definition sprite 18, name: Sprite-22
0093+  906D             	db 1,3,7,15,17,21,159,223
0093+  906D 0103070F11159FDF
0094+  9075             	db 56,23,23,24,31,31,51,34
0094+  9075 381717181F1F3322
0095+  907D             	db 128,192,224,240,136,168,249,251
0095+  907D 80C0E0F088A8F9FB
0096+  9085             	db 30,232,232,24,248,248,108,36
0096+  9085 1EE8E818F8F86C24
0097+  908D             ;Definition sprite 19, name: Sprite-20
0098+  908D             	db 0,0,4,2,1,35,23,13
0098+  908D 000004020123170D
0099+  9095             	db 15,22,35,1,2,4,0,0
0099+  9095 0F16230102040000
0100+  909D             	db 0,0,32,64,128,196,232,176
0100+  909D 0000204080C4E8B0
0101+  90A5             	db 240,168,196,128,64,32,0,0
0101+  90A5 F0A8C48040200000
0102+  90AD             ;Definition sprite 20, name: Sprite-21
0103+  90AD             	db 0,1,3,3,0,0,0,0
0103+  90AD 0001030300000000
0104+  90B5             	db 0,48,11,7,15,20,2,0
0104+  90B5 00300B070F140200
0105+  90BD             	db 0,192,224,240,112,120,56,56
0105+  90BD 00C0E0F070783838
0106+  90C5             	db 120,240,240,224,0,0,0,0
0106+  90C5 78F0F0E000000000
0107+  90CD             ;Definition sprite 21, name: Sprite-22
0108+  90CD             	db 0,1,13,28,24,1,1,13
0108+  90CD 00010D1C1801010D
0109+  90D5             	db 14,6,0,7,7,0,0,0
0109+  90D5 0E06000707000000
0110+  90DD             	db 0,128,192,192,0,184,184,128
0110+  90DD 0080C0C000B8B880
0111+  90E5             	db 0,96,96,128,0,0,0,0
0111+  90E5 0060608000000000
0112+  90ED             ;Definition sprite 22, name: Sprite-23
0113+  90ED             	db 0,0,3,3,14,14,56,56
0113+  90ED 000003030E0E3838
0114+  90F5             	db 14,14,3,3,0,0,0,0
0114+  90F5 0E0E030300000000
0115+  90FD             	db 0,0,192,192,112,120,56,0
0115+  90FD 0000C0C070783800
0116+  9105             	db 0,112,240,128,0,0,0,0
0116+  9105 0070F08000000000
0117+  910D             
0118+  910D             
0119+  910D             
0178   910D             
0179   910D                 include "./src/musicint.asm"
0001+  910D             
0002+  910D             HKEYI equ #FD9A
0003+  910D             HTIMI equ #FD9F ;Vblank
0004+  910D             MAX_CONTADOR equ 50
0005+  910D             rutina_previa equ #f202      
0006+  910D             ;rutina_previa: ds 5      
0007+  910D             musica_activa:  equ #8504
0008+  910D             
0009+  910D             inicilizar_tracker: 
0010+  910D                 ;Deactivamos las interrupciones
0011+  910D F3              di	
0012+  910E             
0013+  910E 3A 00 F0        LD		 A, (PT3_SETUP)
0014+  9111 E6 FE           AND		11111110b
0015+  9113 32 00 F0        LD		(PT3_SETUP), A
0016+  9116             
0017+  9116             
0018+  9116 3A 04 85        ld a,(musica_activa)
0019+  9119 FE 01           cp 1;Si es 1 es la música del menu
0020+  911B 28 06           jr z,.musica_menu
0021+  911D FE 02           cp 2
0022+  911F 28 07           jr z,.musica_ingame
0023+  9121 18 08           jr .inicializa_cancion
0024+  9123             .musica_menu
0025+  9123 21 55 99        ld hl, menu-99
0026+  9126 18 03           jr .inicializa_cancion
0027+  9128             .musica_ingame
0028+  9128 21 18 97    	ld hl, ingame-99		; hl vale la direccion donde se encuentra la cancion - 99
0029+  912B             .inicializa_cancion
0030+  912B CD 8C 91    	call PT3_INIT			; Inicia el reproductor de PT3
0031+  912E                 
0032+  912E                 ;Salvamos la rutina ISR(Interrupt service routine) si hubiese alguna.Son 5 bytes
0033+  912E 21 9F FD        ld hl,HTIMI
0034+  9131 11 02 F2        ld de,rutina_previa
0035+  9134 01 05 00        ld bc,5
0036+  9137 ED B0           ldir
0037+  9139             
0038+  9139             
0039+  9139                 ;instalamos nuestra rutina
0040+  9139 3E C3           ld a,#c3
0041+  913B 32 9F FD        ld (HTIMI),a
0042+  913E 21 46 91        ld hl, reproducir_bloque_musica
0043+  9141 22 A0 FD        ld (HTIMI+1), hl
0044+  9144                 ;Activamos las interrupciones
0045+  9144 FB          	ei 
0046+  9145                 ;Volvemos al basic
0047+  9145 C9              ret
0048+  9146             
0049+  9146             reproducir_bloque_musica: 
0050+  9146                 ;------------------Reproducir Bloque de múscia--------
0051+  9146                 ;halt						;sincronizacion
0052+  9146             	;di
0053+  9146 3A 04 85        ld a,(musica_activa)
0054+  9149 B7              or a
0055+  914A CA 54 91        jp z,.end_reproducir_bloque_musica
0056+  914D CD D1 96    	call	PT3_ROUT			;Borrar el valor anterior
0057+  9150 CD D9 95    	call	PT3_PLAY			;Reproduce el siguiente trozo de canción
0058+  9153                 ;ei
0059+  9153                 ;--------------Fin de reproducir bloque de música-----
0060+  9153                 ;lanzamos la rutina que había
0061+  9153                 ;jp rutina_previa
0062+  9153                 ;Volvemos al basic
0063+  9153 C9              ret
0064+  9154             .end_reproducir_bloque_musica: 
0065+  9154 CD 80 91        call PT3_MUTE
0066+  9157 C9              ret
0067+  9158             para_cancion: 
0068+  9158                 ;volvemos a poner los 5 bytes que tenía
0069+  9158 F3              di
0070+  9159 21 02 F2        ld hl,rutina_previa
0071+  915C 11 9F FD        ld de,HTIMI
0072+  915F 01 05 00        ld bc,5
0073+  9162 ED B0           ldir
0074+  9164                 ;call PT3_MUTE
0075+  9164 AF              xor a
0076+  9165 32 04 85        ld (musica_activa),a
0077+  9168                 ;ei
0078+  9168 C9              ret
0079+  9169             
0080+  9169             sigue_musica: 
0081+  9169 3E 01           ld a,1
0082+  916B 32 04 85        ld (musica_activa),a
0083+  916E C9              ret
0084+  916F             
0085+  916F             
0086+  916F             
0087+  916F             tracker: 
0088+  916F             	include	"./src/PT3_player.asm"					;replayer de PT3
0001++ 916F             		; --- PT3 REPLAYER WORKING ON ROM ---
0002++ 916F             		; --- Can be assembled with asMSX ---
0003++ 916F             		; --- ROM version: MSX-KUN        ---
0004++ 916F             		; --- asMSX version 2: SapphiRe   ---
0005++ 916F             
0006++ 916F             ; Based on MSX full version of PT3 by Dioniso
0007++ 916F             ;
0008++ 916F             ; This version of the replayer can be used with any note table
0009++ 916F             ; This version also allows the use of PT3 commands
0010++ 916F             ; First 99 bytes of each PT3 module should be stripped off
0011++ 916F             ;
0012++ 916F             ; PLAY and PSG WRITE routines seperated to allow independent calls
0013++ 916F             ;
0014++ 916F             ; ROM LENGTH: 1549 bytes
0015++ 916F             ; RAM LENGTH:  576 bytes
0016++ 916F             
0017++ 916F             
0018++ 916F             
0019++ 916F             ;SJASM version by BTV 2016
0020++ 916F             
0021++ 916F             
0022++ 916F             		; --- CONSTANT VALUES DEFINITION ---
0023++ 916F             
0024++ 916F             ;ChannelsVars
0025++ 916F             ;struc	CHNPRM
0026++ 916F             ;reset group
0027++ 916F             CHNPRM_PsInOr	equ 0	;RESB 1
0028++ 916F             CHNPRM_PsInSm	equ 1	;RESB 1
0029++ 916F             CHNPRM_CrAmSl	equ 2	;RESB 1
0030++ 916F             CHNPRM_CrNsSl	equ 3	;RESB 1
0031++ 916F             CHNPRM_CrEnSl	equ 4	;RESB 1
0032++ 916F             CHNPRM_TSlCnt	equ 5	;RESB 1
0033++ 916F             CHNPRM_CrTnSl	equ 6	;RESW 1
0034++ 916F             CHNPRM_TnAcc	equ 8	;RESW 1
0035++ 916F             CHNPRM_COnOff	equ 10	;RESB 1
0036++ 916F             ;reset group
0037++ 916F             
0038++ 916F             CHNPRM_OnOffD	equ 11	;RESB 1
0039++ 916F             
0040++ 916F             ;IX for PTDECOD here [+12]
0041++ 916F             CHNPRM_OffOnD	equ 12	;RESB 1
0042++ 916F             CHNPRM_OrnPtr	equ 13	;RESW 1
0043++ 916F             CHNPRM_SamPtr	equ 15	;RESW 1
0044++ 916F             CHNPRM_NNtSkp	equ 17	;RESB 1
0045++ 916F             CHNPRM_Note	equ 18	;RESB 1
0046++ 916F             CHNPRM_SlToNt	equ 19	;RESB 1
0047++ 916F             CHNPRM_Env_En	equ 20	;RESB 1
0048++ 916F             CHNPRM_Flags	equ 21	;RESB 1
0049++ 916F              ;Enabled - 0,SimpleGliss - 2
0050++ 916F             CHNPRM_TnSlDl	equ 22	;RESB 1
0051++ 916F             CHNPRM_TSlStp	equ 23	;RESW 1
0052++ 916F             CHNPRM_TnDelt	equ 25	;RESW 1
0053++ 916F             CHNPRM_NtSkCn	equ 27	;RESB 1
0054++ 916F             CHNPRM_Volume	equ 28	;RESB 1
0055++ 916F             CHNPRM_Size	equ 29	;RESB 1
0056++ 916F             ;endstruc
0057++ 916F             
0058++ 916F             ;struc	AR
0059++ 916F             AR_TonA		equ 0	;RESW 1
0060++ 916F             AR_TonB		equ 2	;RESW 1
0061++ 916F             AR_TonC		equ 4	;RESW 1
0062++ 916F             AR_Noise	equ 6	;RESB 1
0063++ 916F             AR_Mixer	equ 7	;RESB 1
0064++ 916F             AR_AmplA	equ 8	;RESB 1
0065++ 916F             AR_AmplB	equ 9	;RESB 1
0066++ 916F             AR_AmplC	equ 10	;RESB 1
0067++ 916F             AR_Env		equ 11	;RESW 1
0068++ 916F             AR_EnvTp	equ 13	;RESB 1
0069++ 916F             ;endstruc
0070++ 916F              
0071++ 916F             		; --- CODE STARTS HERE ---
0072++ 916F             
0073++ 916F 21 00 F0    CHECKLP: 	LD	HL,PT3_SETUP
0074++ 9172 CB FE       		SET	7,[HL]
0075++ 9174 CB 46       		BIT	0,[HL]
0076++ 9176 C8          		RET	Z
0077++ 9177 E1          		POP	HL
0078++ 9178 21 7A F0    		LD	HL,DelyCnt
0079++ 917B 34          		INC	[HL]
0080++ 917C 21 3E F0    		LD	HL,ChanA+CHNPRM_NtSkCn
0081++ 917F 34          		INC	[HL]
0082++ 9180 AF          PT3_MUTE: 	XOR	A
0083++ 9181 67          		LD	H,A
0084++ 9182 6F          		LD	L,A
0085++ 9183 32 48 F1    		LD	[AYREGS+AR_AmplA],A
0086++ 9186 22 49 F1    		LD	[AYREGS+AR_AmplB],HL
0087++ 9189 C3 D2 96    		JP	ROUT_A0
0088++ 918C             
0089++ 918C             PT3_INIT: 	;HL - AddressOfModule - 100
0090++ 918C 22 01 F0    		LD [PT3_MODADDR],HL
0091++ 918F E5          		PUSH HL
0092++ 9190 11 64 00    		LD DE,100
0093++ 9193 19          		ADD HL,DE
0094++ 9194 7E          		LD A,[HL]
0095++ 9195 32 1C F0    		LD [PT3_Delay],A
0096++ 9198 E5          		PUSH HL
0097++ 9199 DD E1       		POP IX
0098++ 919B 19          		ADD HL,DE
0099++ 919C 22 03 F0    		LD [PT3_CrPsPtr],HL
0100++ 919F DD 5E 02    		LD E,[IX+102-100]
0101++ 91A2 19          		ADD HL,DE
0102++ 91A3 23          		INC HL
0103++ 91A4 22 18 F0    		LD [PT3_LPosPtr],HL
0104++ 91A7 D1          		POP DE
0105++ 91A8 DD 6E 03    		LD L,[IX+103-100]
0106++ 91AB DD 66 04    		LD H,[IX+104-100]
0107++ 91AE 19          		ADD HL,DE
0108++ 91AF 22 1A F0    		LD [PT3_PatsPtr],HL
0109++ 91B2 21 A9 00    		LD HL,169
0110++ 91B5 19          		ADD HL,DE
0111++ 91B6 22 07 F0    		LD [PT3_OrnPtrs],HL
0112++ 91B9 21 69 00    		LD HL,105
0113++ 91BC 19          		ADD HL,DE
0114++ 91BD 22 05 F0    		LD [PT3_SAMPTRS],HL
0115++ 91C0 21 00 F0    		LD HL,PT3_SETUP
0116++ 91C3 CB BE       		RES 7,[HL]
0117++ 91C5             
0118++ 91C5             		; --- note table data depacker ---
0119++ 91C5             		; Depacks first 12 tones of each tone table
0120++ 91C5             
0121++ 91C5 11 46 97    		LD DE,T_PACK
0122++ 91C8 01 B1 F1    		LD BC,T1_+(2*49)-1
0123++ 91CB 1A          .TP_0: 		LD A,[DE]
0124++ 91CC 13          		INC DE
0125++ 91CD FE 1E       		CP 15*2
0126++ 91CF 30 06       		JR NC,.TP_1
0127++ 91D1 67          		LD H,A
0128++ 91D2 1A          		LD A,[DE]
0129++ 91D3 6F          		LD L,A
0130++ 91D4 13          		INC DE
0131++ 91D5 18 07       		JR .TP_2
0132++ 91D7 D5          .TP_1: 		PUSH DE
0133++ 91D8 16 00       		LD D,0
0134++ 91DA 5F          		LD E,A
0135++ 91DB 19          		ADD HL,DE
0136++ 91DC 19          		ADD HL,DE
0137++ 91DD D1          		POP DE
0138++ 91DE 7C          .TP_2: 		LD A,H
0139++ 91DF 02          		LD [BC],A
0140++ 91E0 0B          		DEC BC
0141++ 91E1 7D          		LD A,L
0142++ 91E2 02          		LD [BC],A
0143++ 91E3 0B          		DEC BC
0144++ 91E4 D6 F0       		SUB $F0
0145++ 91E6 20 E3       		JR NZ,.TP_0
0146++ 91E8             
0147++ 91E8             		; --- INITIALIZE PT3 VARIABLES ---
0148++ 91E8 21 23 F0    		LD HL,VARS
0149++ 91EB 77          		LD [HL],A
0150++ 91EC 11 24 F0    		LD DE,VARS+1
0151++ 91EF 01 2C 01    		LD BC,VAR0END-VARS-1
0152++ 91F2 ED B0       		LDIR
0153++ 91F4             
0154++ 91F4 3C          		INC A
0155++ 91F5 32 7A F0    		LD [DelyCnt],A
0156++ 91F8 21 01 F0    		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
0157++ 91FB 22 3E F0    		LD [ChanA+CHNPRM_NtSkCn],HL
0158++ 91FE 22 5B F0    		LD [ChanB+CHNPRM_NtSkCn],HL
0159++ 9201 22 78 F0    		LD [ChanC+CHNPRM_NtSkCn],HL
0160++ 9204             
0161++ 9204 21 42 97    		LD HL,EMPTYSAMORN
0162++ 9207 22 12 F0    		LD [PT3_AdInPtA],HL ;ptr to zero
0163++ 920A 22 30 F0    		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
0164++ 920D 22 4D F0    		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
0165++ 9210 22 6A F0    		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
0166++ 9213             
0167++ 9213 22 32 F0    		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
0168++ 9216 22 4F F0    		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
0169++ 9219 22 6C F0    		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
0170++ 921C             					    ;also EMPTYSAMORN comment
0171++ 921C             
0172++ 921C             		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
0173++ 921C DD 7E FF    		LD A,[IX+99-100] ;TONE TABLE NUMBER
0174++ 921F 17          		RLA
0175++ 9220 E6 07       		AND 7
0176++ 9222 21 F2 96    		LD HL,NT_DATA
0177++ 9225 D5          		PUSH DE
0178++ 9226 50          		LD D,B		; ld d,0 (bc is 0000 after LDIR)
0179++ 9227 87          		ADD A,A
0180++ 9228 5F          		LD E,A
0181++ 9229 19          		ADD HL,DE	; hl -> init of correct note table data
0182++ 922A 5E          		LD E,[HL]
0183++ 922B 23          		INC HL
0184++ 922C CB 3B       		SRL E
0185++ 922E 9F          		SBC A,A
0186++ 922F E6 A7       		AND $A7			;$00 (NOP) or $A7 (AND A)
0187++ 9231 32 21 F0    		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
0188++ 9234 3E C9       		LD A,$C9		; RET CODE
0189++ 9236 32 22 F0    		LD [PT3_NTL3+1],A	; RET PLACED
0190++ 9239 EB          		EX DE,HL
0191++ 923A C1          		POP BC ;BC=T1_
0192++ 923B 09          		ADD HL,BC
0193++ 923C             
0194++ 923C 1A          		LD A,[DE]                           
0195++ 923D             
0196++ 923D 01 02 97    		LD BC,T_
0197++ 9240 81          		ADD A,C
0198++ 9241 4F          		LD C,A
0199++ 9242 88          		ADC A,B
0200++ 9243             
0201++ 9243 91          		SUB C
0202++ 9244 47          		LD B,A
0203++ 9245 C5          		PUSH BC
0204++ 9246 11 80 F0    		LD DE,NT_
0205++ 9249 D5          		PUSH DE
0206++ 924A             
0207++ 924A 06 0C       		LD B,12
0208++ 924C C5          .L1: 		PUSH BC
0209++ 924D 4E          		LD C,[HL]
0210++ 924E 23          		INC HL
0211++ 924F E5          		PUSH HL
0212++ 9250 46          		LD B,[HL]
0213++ 9251             
0214++ 9251 D5          		PUSH DE
0215++ 9252 EB          		EX DE,HL
0216++ 9253 11 17 00    		LD DE,23
0217++ 9256 DD 26 08    		db $DD,$26,$08	;LD XH,8
0218++ 9259             
0219++ 9259 CB 38       .L2: 		SRL B
0220++ 925B CB 19       		RR C
0221++ 925D CD 21 F0    .L3: 		CALL PT3_NTL3	;AND A or NOP
0222++ 9260 79          		LD A,C
0223++ 9261 8A          		ADC A,D	;=ADC 0
0224++ 9262 77          		LD [HL],A
0225++ 9263 23          		INC HL
0226++ 9264 78          		LD A,B
0227++ 9265 8A          		ADC A,D
0228++ 9266 77          		LD [HL],A
0229++ 9267 19          		ADD HL,DE
0230++ 9268 DD 25       		db $DD,$25	;DEC XH
0231++ 926A 20 ED       		JR NZ,.L2
0232++ 926C             
0233++ 926C D1          		POP DE
0234++ 926D 13          		INC DE
0235++ 926E 13          		INC DE
0236++ 926F E1          		POP HL
0237++ 9270 23          		INC HL
0238++ 9271 C1          		POP BC
0239++ 9272 10 D8       		DJNZ .L1
0240++ 9274             
0241++ 9274 E1          		POP HL
0242++ 9275 D1          		POP DE
0243++ 9276             
0244++ 9276 7B          		LD A,E
0245++ 9277 D5          		PUSH DE
0246++ 9278 11 0E 97    		LD DE,TCOLD_1
0247++ 927B BB          		CP E
0248++ 927C D1          		POP DE
0249++ 927D 20 05       		JR NZ,.CORR_1
0250++ 927F 3E FD       		LD A,$FD
0251++ 9281 32 AE F0    		LD [NT_+$2E],A
0252++ 9284             
0253++ 9284 1A          .CORR_1: 	LD A,[DE]
0254++ 9285 A7          		AND A
0255++ 9286 28 11       		JR Z,.TC_EXIT
0256++ 9288 1F          		RRA
0257++ 9289 F5          		PUSH AF
0258++ 928A 87          		ADD A,A
0259++ 928B 4F          		LD C,A
0260++ 928C 09          		ADD HL,BC
0261++ 928D F1          		POP AF
0262++ 928E 30 02       		JR NC,.CORR_2
0263++ 9290 35          		DEC [HL]
0264++ 9291 35          		DEC [HL]
0265++ 9292 34          .CORR_2: 	INC [HL]
0266++ 9293 A7          		AND A
0267++ 9294 ED 42       		SBC HL,BC
0268++ 9296 13          		INC DE
0269++ 9297 18 EB       		JR .CORR_1
0270++ 9299             
0271++ 9299             .TC_EXIT: 	;POP AF
0272++ 9299             
0273++ 9299             		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
0274++ 9299 21 11 00    		ld	hl,$11
0275++ 929C 54          		ld	d,h
0276++ 929D 5C          		ld	e,h
0277++ 929E DD 21 50 F1 		ld	IX,VT_+16
0278++ 92A2 06 0F       		ld	b,15
0279++ 92A4 E5          .INITV1: 	push	hl
0280++ 92A5 19          		add	hl,de
0281++ 92A6 EB          		ex	de,hl
0282++ 92A7 ED 62       		sbc	hl,hl
0283++ 92A9 48          		ld	c,b
0284++ 92AA 06 10       		ld	b,16
0285++ 92AC 7D          .INITV2: 	ld	a,l
0286++ 92AD 17          		rla
0287++ 92AE 7C          		ld	a,h
0288++ 92AF CE 00       		adc	a,0
0289++ 92B1 DD 77 00    		ld	[ix],a
0290++ 92B4 DD 23       		inc	ix
0291++ 92B6 19          		add	hl,de
0292++ 92B7 10 F3       		djnz	.INITV2
0293++ 92B9 E1          		pop	hl
0294++ 92BA 7B          		ld	a,e
0295++ 92BB FE 77       		cp	$77
0296++ 92BD 20 01       		jr	nz,.INITV3
0297++ 92BF 1C          		inc	e
0298++ 92C0 41          .INITV3: 	ld	b,c
0299++ 92C1 10 E1       		djnz	.INITV1
0300++ 92C3             
0301++ 92C3 C9          		RET
0302++ 92C4             
0303++ 92C4             		;pattern decoder
0304++ 92C4 DD 36 08 00 PD_OrSm: 	LD [IX+(CHNPRM_Env_En-12)],0
0305++ 92C8 CD 4E 94    		CALL SETORN
0306++ 92CB 0A          		LD A,[BC]
0307++ 92CC 03          		INC BC
0308++ 92CD 0F          		RRCA
0309++ 92CE             
0310++ 92CE 87          PD_SAM: 		ADD A,A
0311++ 92CF 5F          PD_SAM_: 	LD E,A
0312++ 92D0 16 00       		LD D,0
0313++ 92D2 2A 05 F0    		LD HL,[PT3_SAMPTRS]
0314++ 92D5 19          		ADD HL,DE
0315++ 92D6 5E          		LD E,[HL]
0316++ 92D7 23          		INC HL
0317++ 92D8 56          		LD D,[HL]
0318++ 92D9 2A 01 F0    		LD HL,[PT3_MODADDR]
0319++ 92DC 19          		ADD HL,DE
0320++ 92DD DD 75 03    		LD [IX+(CHNPRM_SamPtr-12)],L
0321++ 92E0 DD 74 04    		LD [IX+(CHNPRM_SamPtr+1-12)],H
0322++ 92E3 18 41       		JR PD_LOOP
0323++ 92E5             
0324++ 92E5 07          PD_VOL: 		RLCA
0325++ 92E6 07          		RLCA
0326++ 92E7 07          		RLCA
0327++ 92E8 07          		RLCA
0328++ 92E9 DD 77 10    		LD [IX+(CHNPRM_Volume-12)],A
0329++ 92EC 18 3B       		JR PD_LP2
0330++ 92EE             	
0331++ 92EE DD 77 08    PD_EOff: 	LD [IX+(CHNPRM_Env_En-12)],A
0332++ 92F1 DD 77 F4    		LD [IX+(CHNPRM_PsInOr-12)],A
0333++ 92F4 18 33       		JR PD_LP2
0334++ 92F6             
0335++ 92F6 3D          PD_SorE: 	DEC A
0336++ 92F7 20 07       		JR NZ,PD_ENV
0337++ 92F9 0A          		LD A,[BC]
0338++ 92FA 03          		INC BC
0339++ 92FB DD 77 05    		LD [IX+(CHNPRM_NNtSkp-12)],A
0340++ 92FE 18 29       		JR PD_LP2
0341++ 9300             
0342++ 9300 CD 32 94    PD_ENV: 		CALL SETENV
0343++ 9303 18 24       		JR PD_LP2
0344++ 9305             
0345++ 9305 CD 4E 94    PD_ORN: 		CALL SETORN
0346++ 9308 18 1C       		JR PD_LOOP
0347++ 930A                    
0348++ 930A DD 77 08    PD_ESAM: 	LD [IX+(CHNPRM_Env_En-12)],A
0349++ 930D DD 77 F4    		LD [IX+(CHNPRM_PsInOr-12)],A
0350++ 9310 C4 32 94    		CALL NZ,SETENV
0351++ 9313 0A          		LD A,[BC]
0352++ 9314 03          		INC BC
0353++ 9315 18 B8       		JR PD_SAM_
0354++ 9317             
0355++ 9317 DD 7E 06    PTDECOD: 	LD A,[IX+(CHNPRM_Note-12)]
0356++ 931A 32 0F F0    		LD [PT3_PrNote],A
0357++ 931D DD 6E FA    		LD L,[IX+(CHNPRM_CrTnSl-12)]
0358++ 9320 DD 66 FB    		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
0359++ 9323 22 10 F0    		LD [PT3_PrSlide],HL
0360++ 9326             
0361++ 9326 11 10 20    PD_LOOP: 	LD DE,$2010
0362++ 9329 0A          PD_LP2: 		LD A,[BC]
0363++ 932A 03          		INC BC
0364++ 932B 83          		ADD A,E
0365++ 932C 38 96       		JR C,PD_OrSm
0366++ 932E 82          		ADD A,D
0367++ 932F 28 4A       		JR Z,PD_FIN
0368++ 9331 38 9B       		JR C,PD_SAM
0369++ 9333 83          		ADD A,E
0370++ 9334 28 25       		JR Z,PD_REL
0371++ 9336 38 AD       		JR C,PD_VOL
0372++ 9338 83          		ADD A,E
0373++ 9339 28 B3       		JR Z,PD_EOff
0374++ 933B 38 B9       		JR C,PD_SorE
0375++ 933D C6 60       		ADD A,96
0376++ 933F 38 20       		JR C,PD_NOTE
0377++ 9341 83          		ADD A,E
0378++ 9342 38 C1       		JR C,PD_ORN
0379++ 9344 82          		ADD A,D
0380++ 9345 38 0F       		JR C,PD_NOIS
0381++ 9347 83          		ADD A,E
0382++ 9348 38 C0       		JR C,PD_ESAM
0383++ 934A 87          		ADD A,A
0384++ 934B 5F          		LD E,A
0385++ 934C 21 87 73    		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
0386++ 934F 19          		ADD HL,DE
0387++ 9350 5E          		LD E,[HL]
0388++ 9351 23          		INC HL
0389++ 9352 56          		LD D,[HL]
0390++ 9353 D5          		PUSH DE
0391++ 9354 18 D0       		JR PD_LOOP
0392++ 9356             
0393++ 9356 32 7E F0    PD_NOIS: 	LD [Ns_Base],A
0394++ 9359 18 CE       		JR PD_LP2
0395++ 935B             
0396++ 935B DD CB 09 86 PD_REL: 		RES 0,[IX+(CHNPRM_Flags-12)]
0397++ 935F 18 08       		JR PD_RES
0398++ 9361             	
0399++ 9361 DD 77 06    PD_NOTE: 	LD [IX+(CHNPRM_Note-12)],A
0400++ 9364 DD CB 09 C6 		SET 0,[IX+(CHNPRM_Flags-12)]
0401++ 9368 AF          		XOR A
0402++ 9369             
0403++ 9369 ED 73 09 F0 PD_RES: 		LD [PT3_PDSP],SP
0404++ 936D DD F9       		LD SP,IX
0405++ 936F 67          		LD H,A
0406++ 9370 6F          		LD L,A
0407++ 9371 E5          		PUSH HL
0408++ 9372 E5          		PUSH HL
0409++ 9373 E5          		PUSH HL
0410++ 9374 E5          		PUSH HL
0411++ 9375 E5          		PUSH HL
0412++ 9376 E5          		PUSH HL
0413++ 9377 ED 7B 09 F0 		LD SP,[PT3_PDSP]
0414++ 937B             
0415++ 937B DD 7E 05    PD_FIN: 		LD A,[IX+(CHNPRM_NNtSkp-12)]
0416++ 937E DD 77 0F    		LD [IX+(CHNPRM_NtSkCn-12)],A
0417++ 9381 C9          		RET
0418++ 9382             
0419++ 9382 DD CB 09 96 C_PORTM: 	RES 2,[IX+(CHNPRM_Flags-12)]
0420++ 9386 0A          		LD A,[BC]
0421++ 9387 03          		INC BC
0422++ 9388             		;SKIP PRECALCULATED TONE DELTA [BECAUSE
0423++ 9388             		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
0424++ 9388 03          		INC BC
0425++ 9389 03          		INC BC
0426++ 938A DD 77 0A    		LD [IX+(CHNPRM_TnSlDl-12)],A
0427++ 938D DD 77 F9    		LD [IX+(CHNPRM_TSlCnt-12)],A
0428++ 9390 11 80 F0    		LD DE,NT_
0429++ 9393 DD 7E 06    		LD A,[IX+(CHNPRM_Note-12)]
0430++ 9396 DD 77 07    		LD [IX+(CHNPRM_SlToNt-12)],A
0431++ 9399 87          		ADD A,A
0432++ 939A 6F          		LD L,A
0433++ 939B 26 00       		LD H,0
0434++ 939D 19          		ADD HL,DE
0435++ 939E 7E          		LD A,[HL]
0436++ 939F 23          		INC HL
0437++ 93A0 66          		LD H,[HL]
0438++ 93A1 6F          		LD L,A
0439++ 93A2 E5          		PUSH HL
0440++ 93A3 3A 0F F0    		LD A,[PT3_PrNote]
0441++ 93A6 DD 77 06    		LD [IX+(CHNPRM_Note-12)],A
0442++ 93A9 87          		ADD A,A
0443++ 93AA 6F          		LD L,A
0444++ 93AB 26 00       		LD H,0
0445++ 93AD 19          		ADD HL,DE
0446++ 93AE 5E          		LD E,[HL]
0447++ 93AF 23          		INC HL
0448++ 93B0 56          		LD D,[HL]
0449++ 93B1 E1          		POP HL
0450++ 93B2 ED 52       		SBC HL,DE
0451++ 93B4 DD 75 0D    		LD [IX+(CHNPRM_TnDelt-12)],L
0452++ 93B7 DD 74 0E    		LD [IX+(CHNPRM_TnDelt+1-12)],H
0453++ 93BA ED 5B 10 F0 		LD DE,[PT3_PrSlide]
0454++ 93BE DD 73 FA    		LD [IX+(CHNPRM_CrTnSl-12)],E
0455++ 93C1 DD 72 FB    		LD [IX+(CHNPRM_CrTnSl+1-12)],D
0456++ 93C4 0A          		LD A,[BC] ;SIGNED TONE STEP
0457++ 93C5 03          		INC BC
0458++ 93C6 08          		EX AF,AF'
0459++ 93C7 0A          		LD A,[BC]
0460++ 93C8 03          		INC BC
0461++ 93C9 A7          		AND A
0462++ 93CA 28 01       		JR Z,.NOSIG
0463++ 93CC EB          		EX DE,HL
0464++ 93CD ED 52       .NOSIG: 	SBC HL,DE
0465++ 93CF F2 D7 93    		JP P,SET_STP
0466++ 93D2 2F          		CPL
0467++ 93D3 08          		EX AF,AF'
0468++ 93D4 ED 44       		NEG
0469++ 93D6 08          		EX AF,AF'
0470++ 93D7 DD 77 0C    SET_STP: 	LD [IX+(CHNPRM_TSlStp+1-12)],A
0471++ 93DA 08          		EX AF,AF'
0472++ 93DB DD 77 0B    		LD [IX+(CHNPRM_TSlStp-12)],A
0473++ 93DE DD 36 FE 00 		LD [IX+(CHNPRM_COnOff-12)],0
0474++ 93E2 C9          		RET
0475++ 93E3             
0476++ 93E3 DD CB 09 D6 C_GLISS: 	SET 2,[IX+(CHNPRM_Flags-12)]
0477++ 93E7 0A          		LD A,[BC]
0478++ 93E8 03          		INC BC
0479++ 93E9 DD 77 0A    		LD [IX+(CHNPRM_TnSlDl-12)],A
0480++ 93EC DD 77 F9    		LD [IX+(CHNPRM_TSlCnt-12)],A
0481++ 93EF 0A          		LD A,[BC]
0482++ 93F0 03          		INC BC
0483++ 93F1 08          		EX AF,AF'
0484++ 93F2 0A          		LD A,[BC]
0485++ 93F3 03          		INC BC
0486++ 93F4 18 E1       		JR SET_STP
0487++ 93F6             
0488++ 93F6 0A          C_SMPOS: 	LD A,[BC]
0489++ 93F7 03          		INC BC
0490++ 93F8 DD 77 F5    		LD [IX+(CHNPRM_PsInSm-12)],A
0491++ 93FB C9          		RET
0492++ 93FC             
0493++ 93FC 0A          C_ORPOS: 	LD A,[BC]
0494++ 93FD 03          		INC BC
0495++ 93FE DD 77 F4    		LD [IX+(CHNPRM_PsInOr-12)],A
0496++ 9401 C9          		RET
0497++ 9402             
0498++ 9402 0A          C_VIBRT: 	LD A,[BC]
0499++ 9403 03          		INC BC
0500++ 9404 DD 77 FF    		LD [IX+(CHNPRM_OnOffD-12)],A
0501++ 9407 DD 77 FE    		LD [IX+(CHNPRM_COnOff-12)],A
0502++ 940A 0A          		LD A,[BC]
0503++ 940B 03          		INC BC
0504++ 940C DD 77 00    		LD [IX+(CHNPRM_OffOnD-12)],A
0505++ 940F AF          		XOR A
0506++ 9410 DD 77 F9    		LD [IX+(CHNPRM_TSlCnt-12)],A
0507++ 9413 DD 77 FA    		LD [IX+(CHNPRM_CrTnSl-12)],A
0508++ 9416 DD 77 FB    		LD [IX+(CHNPRM_CrTnSl+1-12)],A
0509++ 9419 C9          		RET
0510++ 941A             
0511++ 941A 0A          C_ENGLS: 	LD A,[BC]
0512++ 941B 03          		INC BC
0513++ 941C 32 1E F0    		LD [PT3_Env_Del],A
0514++ 941F 32 7D F0    		LD [CurEDel],A
0515++ 9422 0A          		LD A,[BC]
0516++ 9423 03          		INC BC
0517++ 9424 6F          		LD L,A
0518++ 9425 0A          		LD A,[BC]
0519++ 9426 03          		INC BC
0520++ 9427 67          		LD H,A
0521++ 9428 22 1F F0    		LD [PT3_ESldAdd],HL
0522++ 942B C9          		RET
0523++ 942C             
0524++ 942C 0A          C_DELAY: 	LD A,[BC]
0525++ 942D 03          		INC BC
0526++ 942E 32 1C F0    		LD [PT3_Delay],A
0527++ 9431 C9          		RET
0528++ 9432             	
0529++ 9432 DD 73 08    SETENV: 		LD [IX+(CHNPRM_Env_En-12)],E
0530++ 9435 32 4D F1    		LD [AYREGS+AR_EnvTp],A
0531++ 9438 0A          		LD A,[BC]
0532++ 9439 03          		INC BC
0533++ 943A 67          		LD H,A
0534++ 943B 0A          		LD A,[BC]
0535++ 943C 03          		INC BC
0536++ 943D 6F          		LD L,A
0537++ 943E 22 4E F1    		LD [EnvBase],HL
0538++ 9441 AF          		XOR A
0539++ 9442 DD 77 F4    		LD [IX+(CHNPRM_PsInOr-12)],A
0540++ 9445 32 7D F0    		LD [CurEDel],A
0541++ 9448 67          		LD H,A
0542++ 9449 6F          		LD L,A
0543++ 944A 22 7B F0    		LD [CurESld],HL
0544++ 944D C9          C_NOP: 		RET
0545++ 944E             
0546++ 944E 87          SETORN: 		ADD A,A
0547++ 944F 5F          		LD E,A
0548++ 9450 16 00       		LD D,0
0549++ 9452 DD 72 F4    		LD [IX+(CHNPRM_PsInOr-12)],D
0550++ 9455 2A 07 F0    		LD HL,[PT3_OrnPtrs]
0551++ 9458 19          		ADD HL,DE
0552++ 9459 5E          		LD E,[HL]
0553++ 945A 23          		INC HL
0554++ 945B 56          		LD D,[HL]
0555++ 945C 2A 01 F0    		LD HL,[PT3_MODADDR]
0556++ 945F 19          		ADD HL,DE
0557++ 9460 DD 75 01    		LD [IX+(CHNPRM_OrnPtr-12)],L
0558++ 9463 DD 74 02    		LD [IX+(CHNPRM_OrnPtr+1-12)],H
0559++ 9466 C9          		RET
0560++ 9467             
0561++ 9467             		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
0562++ 9467 4D 94       SPCCOMS: 	dw C_NOP
0563++ 9469 E3 93       		dw C_GLISS
0564++ 946B 82 93       		dw C_PORTM
0565++ 946D F6 93       		dw C_SMPOS
0566++ 946F FC 93       		dw C_ORPOS
0567++ 9471 02 94       		dw C_VIBRT
0568++ 9473 4D 94       		dw C_NOP
0569++ 9475 4D 94       		dw C_NOP
0570++ 9477 1A 94       		dw C_ENGLS
0571++ 9479 2C 94       		dw C_DELAY
0572++ 947B 4D 94       		dw C_NOP
0573++ 947D 4D 94       		dw C_NOP
0574++ 947F 4D 94       		dw C_NOP
0575++ 9481 4D 94       		dw C_NOP
0576++ 9483 4D 94       		dw C_NOP
0577++ 9485 4D 94       		dw C_NOP
0578++ 9487             
0579++ 9487 AF          CHREGS: 		XOR A
0580++ 9488 32 4A F1    		LD [AYREGS+AR_AmplC],A
0581++ 948B DD CB 15 46 		BIT 0,[IX+CHNPRM_Flags]
0582++ 948F E5          		PUSH HL
0583++ 9490 CA B6 95    		JP Z,.CH_EXIT
0584++ 9493 ED 73 0B F0 		LD [PT3_CSP],SP
0585++ 9497 DD 6E 0D    		LD L,[IX+CHNPRM_OrnPtr]
0586++ 949A DD 66 0E    		LD H,[IX+CHNPRM_OrnPtr+1]
0587++ 949D F9          		LD SP,HL
0588++ 949E D1          		POP DE
0589++ 949F 67          		LD H,A
0590++ 94A0 DD 7E 00    		LD A,[IX+CHNPRM_PsInOr]
0591++ 94A3 6F          		LD L,A
0592++ 94A4 39          		ADD HL,SP
0593++ 94A5 3C          		INC A
0594++ 94A6 BA          		CP D
0595++ 94A7 38 01       		JR C,.CH_ORPS
0596++ 94A9 7B          		LD A,E
0597++ 94AA DD 77 00    .CH_ORPS: 	LD [IX+CHNPRM_PsInOr],A
0598++ 94AD DD 7E 12    		LD A,[IX+CHNPRM_Note]
0599++ 94B0 86          		ADD A,[HL]
0600++ 94B1 F2 B5 94    		JP P,.CH_NTP
0601++ 94B4 AF          		XOR A
0602++ 94B5 FE 60       .CH_NTP: 	CP 96
0603++ 94B7 38 02       		JR C,.CH_NOK
0604++ 94B9 3E 5F       		LD A,95
0605++ 94BB 87          .CH_NOK: 	ADD A,A
0606++ 94BC 08          		EX AF,AF'
0607++ 94BD DD 6E 0F    		LD L,[IX+CHNPRM_SamPtr]
0608++ 94C0 DD 66 10    		LD H,[IX+CHNPRM_SamPtr+1]
0609++ 94C3 F9          		LD SP,HL
0610++ 94C4 D1          		POP DE
0611++ 94C5 26 00       		LD H,0
0612++ 94C7 DD 7E 01    		LD A,[IX+CHNPRM_PsInSm]
0613++ 94CA 47          		LD B,A
0614++ 94CB 87          		ADD A,A
0615++ 94CC 87          		ADD A,A
0616++ 94CD 6F          		LD L,A
0617++ 94CE 39          		ADD HL,SP
0618++ 94CF F9          		LD SP,HL
0619++ 94D0 78          		LD A,B
0620++ 94D1 3C          		INC A
0621++ 94D2 BA          		CP D
0622++ 94D3 38 01       		JR C,.CH_SMPS
0623++ 94D5 7B          		LD A,E
0624++ 94D6 DD 77 01    .CH_SMPS: 	LD [IX+CHNPRM_PsInSm],A
0625++ 94D9 C1          		POP BC
0626++ 94DA E1          		POP HL
0627++ 94DB DD 5E 08    		LD E,[IX+CHNPRM_TnAcc]
0628++ 94DE DD 56 09    		LD D,[IX+CHNPRM_TnAcc+1]
0629++ 94E1 19          		ADD HL,DE
0630++ 94E2 CB 70       		BIT 6,B
0631++ 94E4 28 06       		JR Z,.CH_NOAC
0632++ 94E6 DD 75 08    		LD [IX+CHNPRM_TnAcc],L
0633++ 94E9 DD 74 09    		LD [IX+CHNPRM_TnAcc+1],H
0634++ 94EC EB          .CH_NOAC: 	EX DE,HL
0635++ 94ED 08          		EX AF,AF'
0636++ 94EE 6F          		LD L,A
0637++ 94EF 26 00       		LD H,0
0638++ 94F1 31 80 F0    		LD SP,NT_
0639++ 94F4 39          		ADD HL,SP
0640++ 94F5 F9          		LD SP,HL
0641++ 94F6 E1          		POP HL
0642++ 94F7 19          		ADD HL,DE
0643++ 94F8 DD 5E 06    		LD E,[IX+CHNPRM_CrTnSl]
0644++ 94FB DD 56 07    		LD D,[IX+CHNPRM_CrTnSl+1]
0645++ 94FE 19          		ADD HL,DE
0646++ 94FF ED 7B 0B F0 		LD SP,[PT3_CSP]
0647++ 9503 E3          		EX [SP],HL
0648++ 9504 AF          		XOR A
0649++ 9505 DD B6 05    		OR [IX+CHNPRM_TSlCnt]
0650++ 9508 28 3E       		JR Z,.CH_AMP
0651++ 950A DD 35 05    		DEC [IX+CHNPRM_TSlCnt]
0652++ 950D 20 39       		JR NZ,.CH_AMP
0653++ 950F DD 7E 16    		LD A,[IX+CHNPRM_TnSlDl]
0654++ 9512 DD 77 05    		LD [IX+CHNPRM_TSlCnt],A
0655++ 9515 DD 6E 17    		LD L,[IX+CHNPRM_TSlStp]
0656++ 9518 DD 66 18    		LD H,[IX+CHNPRM_TSlStp+1]
0657++ 951B 7C          		LD A,H
0658++ 951C 19          		ADD HL,DE
0659++ 951D DD 75 06    		LD [IX+CHNPRM_CrTnSl],L
0660++ 9520 DD 74 07    		LD [IX+CHNPRM_CrTnSl+1],H
0661++ 9523 DD CB 15 56 		BIT 2,[IX+CHNPRM_Flags]
0662++ 9527 20 1F       		JR NZ,.CH_AMP
0663++ 9529 DD 5E 19    		LD E,[IX+CHNPRM_TnDelt]
0664++ 952C DD 56 1A    		LD D,[IX+CHNPRM_TnDelt+1]
0665++ 952F A7          		AND A
0666++ 9530 28 01       		JR Z,.CH_STPP
0667++ 9532 EB          		EX DE,HL
0668++ 9533 ED 52       .CH_STPP: 	SBC HL,DE
0669++ 9535 FA 48 95    		JP M,.CH_AMP
0670++ 9538 DD 7E 13    		LD A,[IX+CHNPRM_SlToNt]
0671++ 953B DD 77 12    		LD [IX+CHNPRM_Note],A
0672++ 953E AF          		XOR A
0673++ 953F DD 77 05    		LD [IX+CHNPRM_TSlCnt],A
0674++ 9542 DD 77 06    		LD [IX+CHNPRM_CrTnSl],A
0675++ 9545 DD 77 07    		LD [IX+CHNPRM_CrTnSl+1],A
0676++ 9548 DD 7E 02    .CH_AMP: 	LD A,[IX+CHNPRM_CrAmSl]
0677++ 954B CB 79       		BIT 7,C
0678++ 954D 28 13       		JR Z,.CH_NOAM
0679++ 954F CB 71       		BIT 6,C
0680++ 9551 28 07       		JR Z,.CH_AMIN
0681++ 9553 FE 0F       		CP 15
0682++ 9555 28 0B       		JR Z,.CH_NOAM
0683++ 9557 3C          		INC A
0684++ 9558 18 05       		JR .CH_SVAM
0685++ 955A FE F1       .CH_AMIN: 	CP -15
0686++ 955C 28 04       		JR Z,.CH_NOAM
0687++ 955E 3D          		DEC A
0688++ 955F DD 77 02    .CH_SVAM: 	LD [IX+CHNPRM_CrAmSl],A
0689++ 9562 6F          .CH_NOAM: 	LD L,A
0690++ 9563 78          		LD A,B
0691++ 9564 E6 0F       		AND 15
0692++ 9566 85          		ADD A,L
0693++ 9567 F2 6B 95    		JP P,.CH_APOS
0694++ 956A AF          		XOR A
0695++ 956B FE 10       .CH_APOS: 	CP 16
0696++ 956D 38 02       		JR C,.CH_VOL
0697++ 956F 3E 0F       		LD A,15
0698++ 9571 DD B6 1C    .CH_VOL: 	OR [IX+CHNPRM_Volume]
0699++ 9574 6F          		LD L,A
0700++ 9575 26 00       		LD H,0
0701++ 9577 11 40 F1    		LD DE,VT_
0702++ 957A 19          		ADD HL,DE
0703++ 957B 7E          		LD A,[HL]
0704++ 957C CB 41       .CH_ENV: 	BIT 0,C
0705++ 957E 20 03       		JR NZ,.CH_NOEN
0706++ 9580 DD B6 14    		OR [IX+CHNPRM_Env_En]
0707++ 9583 32 4A F1    .CH_NOEN: 	LD [AYREGS+AR_AmplC],A
0708++ 9586 CB 78       		BIT 7,B
0709++ 9588 79          		LD A,C
0710++ 9589 28 19       		JR Z,.NO_ENSL
0711++ 958B 17          		RLA
0712++ 958C 17          		RLA
0713++ 958D CB 2F       		SRA A
0714++ 958F CB 2F       		SRA A
0715++ 9591 CB 2F       		SRA A
0716++ 9593 DD 86 04    		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
0717++ 9596 CB 68       		BIT 5,B
0718++ 9598 28 03       		JR Z,.NO_ENAC
0719++ 959A DD 77 04    		LD [IX+CHNPRM_CrEnSl],A
0720++ 959D 21 1D F0    .NO_ENAC: 	LD HL,PT3_AddToEn
0721++ 95A0 86          		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
0722++ 95A1             			   ;FIX IT IN NEXT VERSION?
0723++ 95A1 77          		LD [HL],A
0724++ 95A2 18 0E       		JR .CH_MIX
0725++ 95A4 1F          .NO_ENSL: 	RRA
0726++ 95A5 DD 86 03    		ADD A,[IX+CHNPRM_CrNsSl]
0727++ 95A8 32 7F F0    		LD [AddToNs],A
0728++ 95AB CB 68       		BIT 5,B
0729++ 95AD 28 03       		JR Z,.CH_MIX
0730++ 95AF DD 77 03    		LD [IX+CHNPRM_CrNsSl],A
0731++ 95B2 78          .CH_MIX: 	LD A,B
0732++ 95B3 1F          		RRA
0733++ 95B4 E6 48       		AND $48
0734++ 95B6 21 47 F1    .CH_EXIT: 	LD HL,AYREGS+AR_Mixer
0735++ 95B9 B6          		OR [HL]
0736++ 95BA 0F          		RRCA
0737++ 95BB 77          		LD [HL],A
0738++ 95BC E1          		POP HL
0739++ 95BD AF          		XOR A
0740++ 95BE DD B6 0A    		OR [IX+CHNPRM_COnOff]
0741++ 95C1 C8          		RET Z
0742++ 95C2 DD 35 0A    		DEC [IX+CHNPRM_COnOff]
0743++ 95C5 C0          		RET NZ
0744++ 95C6 DD AE 15    		XOR [IX+CHNPRM_Flags]
0745++ 95C9 DD 77 15    		LD [IX+CHNPRM_Flags],A
0746++ 95CC 1F          		RRA
0747++ 95CD DD 7E 0B    		LD A,[IX+CHNPRM_OnOffD]
0748++ 95D0 38 03       		JR C,.CH_ONDL
0749++ 95D2 DD 7E 0C    		LD A,[IX+CHNPRM_OffOnD]
0750++ 95D5 DD 77 0A    .CH_ONDL: 	LD [IX+CHNPRM_COnOff],A
0751++ 95D8 C9          		RET
0752++ 95D9             
0753++ 95D9 AF          PT3_PLAY: 	XOR A
0754++ 95DA 32 1D F0    		LD [PT3_AddToEn],A
0755++ 95DD 32 47 F1    		LD [AYREGS+AR_Mixer],A
0756++ 95E0 3D          		DEC A
0757++ 95E1 32 4D F1    		LD [AYREGS+AR_EnvTp],A
0758++ 95E4 21 7A F0    		LD HL,DelyCnt
0759++ 95E7 35          		DEC [HL]
0760++ 95E8 C2 6F 96    		JP NZ,.PL2
0761++ 95EB 21 3E F0    		LD HL,ChanA+CHNPRM_NtSkCn
0762++ 95EE 35          		DEC [HL]
0763++ 95EF 20 4E       		JR NZ,.PL1B
0764++ 95F1 ED 4B 12 F0 		LD BC,[PT3_AdInPtA]
0765++ 95F5 0A          		LD A,[BC]
0766++ 95F6 A7          		AND A
0767++ 95F7 20 3B       		JR NZ,.PL1A
0768++ 95F9 57          		LD D,A
0769++ 95FA 32 7E F0    		LD [Ns_Base],A
0770++ 95FD 2A 03 F0    		LD HL,[PT3_CrPsPtr]
0771++ 9600 23          		INC HL
0772++ 9601 7E          		LD A,[HL]
0773++ 9602 3C          		INC A
0774++ 9603 20 08       		JR NZ,.PLNLP
0775++ 9605 CD 6F 91    		CALL CHECKLP
0776++ 9608 2A 18 F0    		LD HL,[PT3_LPosPtr]
0777++ 960B 7E          		LD A,[HL]
0778++ 960C 3C          		INC A
0779++ 960D 22 03 F0    .PLNLP: 	LD [PT3_CrPsPtr],HL
0780++ 9610 3D          		DEC A
0781++ 9611 87          		ADD A,A
0782++ 9612 5F          		LD E,A
0783++ 9613 CB 12       		RL D
0784++ 9615 2A 1A F0    		LD HL,[PT3_PatsPtr]
0785++ 9618 19          		ADD HL,DE
0786++ 9619 ED 5B 01 F0 		LD DE,[PT3_MODADDR]
0787++ 961D ED 73 0D F0 		LD [PT3_PSP],SP
0788++ 9621 F9          		LD SP,HL
0789++ 9622 E1          		POP HL
0790++ 9623 19          		ADD HL,DE
0791++ 9624 44          		LD B,H
0792++ 9625 4D          		LD C,L
0793++ 9626 E1          		POP HL
0794++ 9627 19          		ADD HL,DE
0795++ 9628 22 14 F0    		LD [PT3_AdInPtB],HL
0796++ 962B E1          		POP HL
0797++ 962C 19          		ADD HL,DE
0798++ 962D 22 16 F0    		LD [PT3_AdInPtC],HL
0799++ 9630 ED 7B 0D F0 		LD SP,[PT3_PSP]
0800++ 9634             
0801++ 9634 DD 21 2F F0 .PL1A: 		LD IX,ChanA+12
0802++ 9638 CD 17 93    		CALL PTDECOD
0803++ 963B ED 43 12 F0 		LD [PT3_AdInPtA],BC
0804++ 963F             
0805++ 963F 21 5B F0    .PL1B: 		LD HL,ChanB+CHNPRM_NtSkCn
0806++ 9642 35          		DEC [HL]
0807++ 9643 20 0F       		JR NZ,.PL1C
0808++ 9645 DD 21 4C F0 		LD IX,ChanB+12
0809++ 9649 ED 4B 14 F0 		LD BC,[PT3_AdInPtB]
0810++ 964D CD 17 93    		CALL PTDECOD
0811++ 9650 ED 43 14 F0 		LD [PT3_AdInPtB],BC
0812++ 9654             
0813++ 9654 21 78 F0    .PL1C: 		LD HL,ChanC+CHNPRM_NtSkCn
0814++ 9657 35          		DEC [HL]
0815++ 9658 20 0F       		JR NZ,.PL1D
0816++ 965A DD 21 69 F0 		LD IX,ChanC+12
0817++ 965E ED 4B 16 F0 		LD BC,[PT3_AdInPtC]
0818++ 9662 CD 17 93    		CALL PTDECOD
0819++ 9665 ED 43 16 F0 		LD [PT3_AdInPtC],BC
0820++ 9669             
0821++ 9669 3A 1C F0    .PL1D: 		LD A,[PT3_Delay]
0822++ 966C 32 7A F0    		LD [DelyCnt],A
0823++ 966F             
0824++ 966F DD 21 23 F0 .PL2: 		LD IX,ChanA
0825++ 9673 2A 40 F1    		LD HL,[AYREGS+AR_TonA]
0826++ 9676 CD 87 94    		CALL CHREGS
0827++ 9679 22 40 F1    		LD [AYREGS+AR_TonA],HL
0828++ 967C 3A 4A F1    		LD A,[AYREGS+AR_AmplC]
0829++ 967F 32 48 F1    		LD [AYREGS+AR_AmplA],A
0830++ 9682 DD 21 40 F0 		LD IX,ChanB
0831++ 9686 2A 42 F1    		LD HL,[AYREGS+AR_TonB]
0832++ 9689 CD 87 94    		CALL CHREGS
0833++ 968C 22 42 F1    		LD [AYREGS+AR_TonB],HL
0834++ 968F 3A 4A F1    		LD A,[AYREGS+AR_AmplC]
0835++ 9692 32 49 F1    		LD [AYREGS+AR_AmplB],A
0836++ 9695 DD 21 5D F0 		LD IX,ChanC
0837++ 9699 2A 44 F1    		LD HL,[AYREGS+AR_TonC]
0838++ 969C CD 87 94    		CALL CHREGS
0839++ 969F 22 44 F1    		LD [AYREGS+AR_TonC],HL
0840++ 96A2             
0841++ 96A2 2A 7E F0    		LD HL,[Ns_Base_AddToNs]
0842++ 96A5 7C          		LD A,H
0843++ 96A6 85          		ADD A,L
0844++ 96A7 32 46 F1    		LD [AYREGS+AR_Noise],A
0845++ 96AA             
0846++ 96AA 3A 1D F0    		LD A,[PT3_AddToEn]
0847++ 96AD 5F          		LD E,A
0848++ 96AE 87          		ADD A,A
0849++ 96AF 9F          		SBC A,A
0850++ 96B0 57          		LD D,A
0851++ 96B1 2A 4E F1    		LD HL,[EnvBase]
0852++ 96B4 19          		ADD HL,DE
0853++ 96B5 ED 5B 7B F0 		LD DE,[CurESld]
0854++ 96B9 19          		ADD HL,DE
0855++ 96BA 22 4B F1    		LD [AYREGS+AR_Env],HL
0856++ 96BD             
0857++ 96BD AF          		XOR A
0858++ 96BE 21 7D F0    		LD HL,CurEDel
0859++ 96C1 B6          		OR [HL]
0860++ 96C2 C8          		RET Z
0861++ 96C3 35          		DEC [HL]
0862++ 96C4 C0          		RET NZ
0863++ 96C5 3A 1E F0    		LD A,[PT3_Env_Del]
0864++ 96C8 77          		LD [HL],A
0865++ 96C9 2A 1F F0    		LD HL,[PT3_ESldAdd]
0866++ 96CC 19          		ADD HL,DE
0867++ 96CD 22 7B F0    		LD [CurESld],HL
0868++ 96D0 C9          		RET
0869++ 96D1             
0870++ 96D1 AF          PT3_ROUT: 	XOR A
0871++ 96D2             	
0872++ 96D2             ROUT_A0: 	; --- FIXES BITS 6 AND 7 OF MIXER ---
0873++ 96D2 21 47 F1    		LD	HL,AYREGS+AR_Mixer
0874++ 96D5 CB FE       		set	7,[hl]
0875++ 96D7 CB B6       		res	6,[hl]
0876++ 96D9             
0877++ 96D9 0E A0       		LD C,$A0
0878++ 96DB 21 40 F1    		LD HL,AYREGS
0879++ 96DE ED 79       .LOUT: 		OUT [C],A
0880++ 96E0 0C          		INC C
0881++ 96E1 ED A3       		OUTI 
0882++ 96E3 0D          		DEC C
0883++ 96E4 3C          		INC A
0884++ 96E5 FE 0D       		CP 13
0885++ 96E7 20 F5       		JR NZ,.LOUT
0886++ 96E9 ED 79       		OUT [C],A
0887++ 96EB 7E          		LD A,[HL]
0888++ 96EC A7          		AND A
0889++ 96ED F8          		RET M
0890++ 96EE 0C          		INC C
0891++ 96EF ED 79       		OUT [C],A
0892++ 96F1 C9          		RET
0893++ 96F2             
0894++ 96F2 64          NT_DATA: 	db (T_NEW_0-T1_)*2
0895++ 96F3 2A          		db TCNEW_0-T_
0896++ 96F4 65          		db (T_OLD_0-T1_)*2+1
0897++ 96F5 00          		db TCOLD_0-T_
0898++ 96F6 01          		db (T_NEW_1-T1_)*2+1
0899++ 96F7 0C          		db TCNEW_1-T_
0900++ 96F8 01          		db (T_OLD_1-T1_)*2+1
0901++ 96F9 0C          		db TCOLD_1-T_
0902++ 96FA 94          		db (T_NEW_2-T1_)*2
0903++ 96FB 35          		db TCNEW_2-T_
0904++ 96FC 30          		db (T_OLD_2-T1_)*2
0905++ 96FD 0E          		db TCOLD_2-T_
0906++ 96FE 60          		db (T_NEW_3-T1_)*2
0907++ 96FF 20          		db TCNEW_3-T_
0908++ 9700 60          		db (T_OLD_3-T1_)*2
0909++ 9701 21          		db TCOLD_3-T_
0910++ 9702             
0911++ 9702             T_: 
0912++ 9702             
0913++ 9702             TCOLD_0: 	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
0913++ 9702 0105090B0D0F1315
0914++ 970A 19 25 3D 00 		db $18+1,$24+1,$3C+1,0
0915++ 970E             TCNEW_1: 	
0916++ 970E 5D 00       TCOLD_1: 	db $5C+1,0
0917++ 9710             TCOLD_2: 	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
0917++ 9710 31374D535F71828C9C
0918++ 9719             		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
0918++ 9719 9EA0A6A8AAACAEAE00
0919++ 9722 57          TCNEW_3: 	db $56+1
0920++ 9723             TCOLD_3: 	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
0920++ 9723 1F2325292D2F33BF00
0921++ 972C             TCNEW_0: 	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
0921++ 972C 1D2123272B2D3155
0922++ 9734 BD BF 00    		db $BC+1,$BE+1,0
0923++ 9737             TCNEW_2: 	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
0923++ 9737 1B2125292B3B4D5F
0924++ 973F BB BD BF    		db $BA+1,$BC+1,$BE+1
0925++ 9742             
0926++ 9742 00 01 00 90 EMPTYSAMORN:  	db 0,1,0,$90 ;delete $90 if you don't need default sample
0927++ 9746             
0928++ 9746             T_PACK: 		; First 12 values of tone tables (packed)
0929++ 9746 0D          		db ($06EC*2)/256
0930++ 9747 D8          		db #d8
0931++ 9748 69          		db $0755-$06EC
0932++ 9749 70          		db $07C5-$0755
0933++ 974A 76          		db $083B-$07C5
0934++ 974B 7D          		db $08B8-$083B
0935++ 974C 85          		db $093D-$08B8
0936++ 974D 8D          		db $09CA-$093D
0937++ 974E 95          		db $0A5F-$09CA
0938++ 974F 9D          		db $0AFC-$0A5F
0939++ 9750 A8          		db $0BA4-$0AFC
0940++ 9751 B1          		db $0C55-$0BA4
0941++ 9752 BB          		db $0D10-$0C55
0942++ 9753 0C          		db ($066D*2)/256
0943++ 9754 DA          		db #da
0944++ 9755 62          		db $06CF-$066D
0945++ 9756 68          		db $0737-$06CF
0946++ 9757 6D          		db $07A4-$0737
0947++ 9758 75          		db $0819-$07A4
0948++ 9759 7B          		db $0894-$0819
0949++ 975A 83          		db $0917-$0894
0950++ 975B 8A          		db $09A1-$0917
0951++ 975C 92          		db $0A33-$09A1
0952++ 975D 9C          		db $0ACF-$0A33
0953++ 975E A4          		db $0B73-$0ACF
0954++ 975F AF          		db $0C22-$0B73
0955++ 9760 B8          		db $0CDA-$0C22
0956++ 9761 0E          		db ($0704*2)/256
0957++ 9762 08          		db #08
0958++ 9763 6A          		db $076E-$0704
0959++ 9764 72          		db $07E0-$076E
0960++ 9765 78          		db $0858-$07E0
0961++ 9766 7E          		db $08D6-$0858
0962++ 9767 86          		db $095C-$08D6
0963++ 9768 90          		db $09EC-$095C
0964++ 9769 96          		db $0A82-$09EC
0965++ 976A A0          		db $0B22-$0A82
0966++ 976B AA          		db $0BCC-$0B22
0967++ 976C B4          		db $0C80-$0BCC
0968++ 976D BE          		db $0D3E-$0C80
0969++ 976E 0F          		db ($07E0*2)/256
0970++ 976F C0          		db #c0
0971++ 9770 78          		db $0858-$07E0
0972++ 9771 88          		db $08E0-$0858
0973++ 9772 80          		db $0960-$08E0
0974++ 9773 90          		db $09F0-$0960
0975++ 9774 98          		db $0A88-$09F0
0976++ 9775 A0          		db $0B28-$0A88
0977++ 9776 B0          		db $0BD8-$0B28
0978++ 9777 A8          		db $0C80-$0BD8
0979++ 9778 E0          		db $0D60-$0C80
0980++ 9779 B0          		db $0E10-$0D60
0981++ 977A E8          		db $0EF8-$0E10
0982++ 977B             
0983++ 977B             
0984++ 977B             
0985++ 977B             
0986++ 977B             
0987++ 977B             
0988++ 977B             
0989++ 977B             
0990++ 977B             
0991++ 977B             
0992++ 977B             
0993++ 977B             
0994++ 977B             
0995++ 977B             	;Variables del replayer... las coloco desde aqui.
0996++ 977B             	;mirar que hace la directiva MAP del SJASM
0997++ 977B             	map		#f000
0998++ 977B             
0999++ 977B             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
1000++ 977B             PT3_SETUP: 		#1	;set bit0 to 1, if you want to play without looping
1001++ 977B             					;bit7 is set each time, when loop point is passed
1002++ 977B             PT3_MODADDR: 	#2
1003++ 977B             PT3_CrPsPtr: 		#2
1004++ 977B             PT3_SAMPTRS: 		#2
1005++ 977B             PT3_OrnPtrs: 		#2
1006++ 977B             PT3_PDSP: 		#2
1007++ 977B             PT3_CSP: 		#2 
1008++ 977B             PT3_PSP: 		#2
1009++ 977B             PT3_PrNote: 		#1
1010++ 977B             PT3_PrSlide: 		#2
1011++ 977B             PT3_AdInPtA: 		#2
1012++ 977B             PT3_AdInPtB: 		#2
1013++ 977B             PT3_AdInPtC: 		#2
1014++ 977B             PT3_LPosPtr: 		#2
1015++ 977B             PT3_PatsPtr: 		#2
1016++ 977B             PT3_Delay: 		#1
1017++ 977B             PT3_AddToEn: 		#1
1018++ 977B             PT3_Env_Del: 		#1
1019++ 977B             PT3_ESldAdd: 		#2
1020++ 977B             PT3_NTL3: 		#2	; AND A / NOP (note table creator)
1021++ 977B             
1022++ 977B             VARS: 			#0
1023++ 977B             
1024++ 977B             ChanA: 			#29			;CHNPRM_Size
1025++ 977B             ChanB: 			#29			;CHNPRM_Size
1026++ 977B             ChanC: 			#29			;CHNPRM_Size
1027++ 977B             
1028++ 977B             ;GlobalVars
1029++ 977B             DelyCnt: 		#1
1030++ 977B             CurESld: 		#2
1031++ 977B             CurEDel: 		#1
1032++ 977B             Ns_Base_AddToNs: 	#0
1033++ 977B             Ns_Base: 		#1
1034++ 977B             AddToNs: 		#1
1035++ 977B             
1036++ 977B             NT_: 			#192	; Puntero a/tabla de frecuencias
1037++ 977B             
1038++ 977B             AYREGS: 			#0
1039++ 977B             VT_: 			#14
1040++ 977B             EnvBase: 		#2
1041++ 977B             VAR0END: 		#0
1042++ 977B             
1043++ 977B             T1_: 			#0		
1044++ 977B             T_NEW_1: 		#0
1045++ 977B             T_OLD_1: 		#24
1046++ 977B             T_OLD_2: 		#24
1047++ 977B             T_NEW_3: 		#0
1048++ 977B             T_OLD_3: 		#2
1049++ 977B             T_OLD_0: 		#0
1050++ 977B             T_NEW_0: 		#24
1051++ 977B             T_NEW_2: 		#166
1052++ 977B             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
0089+  977B             ingame: 
0090+  977B             	incbin "./src/musicdisc.pt3"			
0091+  99B8             menu: 
0092+  99B8             	incbin "./src/menu.pt3"			
0093+  9AC2             
0094+  9AC2             
0095+  9AC2             
0096+  9AC2             
0180   9AC2              
0181   9AC2             FINAL: 
